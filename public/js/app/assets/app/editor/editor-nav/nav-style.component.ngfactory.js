/**
 * This file is generated by the Angular 2 template compiler.
 * Do not edit.
 */
/* tslint:disable */
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
import * as import1 from '@angular/core/src/linker/view';
import * as import2 from '@angular/core/src/linker/element';
import * as import3 from './nav-style.component';
import * as import4 from '@angular/core/src/linker/view_utils';
import * as import6 from '@angular/core/src/linker/view_type';
import * as import7 from '@angular/core/src/change_detection/change_detection';
import * as import8 from '@angular/core/src/metadata/view';
import * as import9 from '@angular/core/src/linker/component_factory';
import * as import10 from '@angular/forms/src/directives/checkbox_value_accessor';
import * as import11 from '@angular/forms/src/directives/ng_model';
import * as import12 from '@angular/forms/src/directives/ng_control_status';
import * as import13 from 'angular2-color-picker/lib/color-picker.directive';
import * as import14 from '../../shared/controls/combobox.component';
import * as import15 from '@angular/core/src/linker/element_ref';
import * as import16 from '@angular/core/src/linker/compiler';
import * as import17 from 'angular2-color-picker/lib/color-picker.service';
import * as import18 from '../../shared/controls/combobox.component.ngfactory';
import * as import19 from '@angular/forms/src/directives/control_value_accessor';
import * as import20 from '@angular/forms/src/directives/ng_control';
import * as import21 from '@angular/core/src/security';
var renderType_NavStyleComponent_Host = null;
var _View_NavStyleComponent_Host0 = (function (_super) {
    __extends(_View_NavStyleComponent_Host0, _super);
    function _View_NavStyleComponent_Host0(viewUtils, parentInjector, declarationEl) {
        _super.call(this, _View_NavStyleComponent_Host0, renderType_NavStyleComponent_Host, import6.ViewType.HOST, viewUtils, parentInjector, declarationEl, import7.ChangeDetectorStatus.CheckAlways);
    }
    _View_NavStyleComponent_Host0.prototype.createInternal = function (rootSelector) {
        this._el_0 = this.selectOrCreateHostElement('dip-nav-style', rootSelector, null);
        this._appEl_0 = new import2.AppElement(0, null, this, this._el_0);
        var compView_0 = viewFactory_NavStyleComponent0(this.viewUtils, this.injector(0), this._appEl_0);
        this._NavStyleComponent_0_4 = new import3.NavStyleComponent();
        this._appEl_0.initComponent(this._NavStyleComponent_0_4, [], compView_0);
        compView_0.create(this._NavStyleComponent_0_4, this.projectableNodes, null);
        this.init([].concat([this._el_0]), [this._el_0], [], []);
        return this._appEl_0;
    };
    _View_NavStyleComponent_Host0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import3.NavStyleComponent) && (0 === requestNodeIndex))) {
            return this._NavStyleComponent_0_4;
        }
        return notFoundResult;
    };
    _View_NavStyleComponent_Host0.prototype.detectChangesInternal = function (throwOnChange) {
        if (((this.numberOfChecks === 0) && !throwOnChange)) {
            this._NavStyleComponent_0_4.ngOnInit();
        }
        this.detectContentChildrenChanges(throwOnChange);
        this.detectViewChildrenChanges(throwOnChange);
    };
    return _View_NavStyleComponent_Host0;
}(import1.AppView));
function viewFactory_NavStyleComponent_Host0(viewUtils, parentInjector, declarationEl) {
    if ((renderType_NavStyleComponent_Host === null)) {
        (renderType_NavStyleComponent_Host = viewUtils.createRenderComponentType('', 0, import8.ViewEncapsulation.None, [], {}));
    }
    return new _View_NavStyleComponent_Host0(viewUtils, parentInjector, declarationEl);
}
export var NavStyleComponentNgFactory = new import9.ComponentFactory('dip-nav-style', viewFactory_NavStyleComponent_Host0, import3.NavStyleComponent);
var styles_NavStyleComponent = [];
var renderType_NavStyleComponent = null;
var _View_NavStyleComponent0 = (function (_super) {
    __extends(_View_NavStyleComponent0, _super);
    function _View_NavStyleComponent0(viewUtils, parentInjector, declarationEl) {
        _super.call(this, _View_NavStyleComponent0, renderType_NavStyleComponent, import6.ViewType.COMPONENT, viewUtils, parentInjector, declarationEl, import7.ChangeDetectorStatus.CheckAlways);
    }
    _View_NavStyleComponent0.prototype.createInternal = function (rootSelector) {
        var parentRenderNode = this.renderer.createViewRoot(this.declarationAppElement.nativeElement);
        this._el_0 = this.renderer.createElement(parentRenderNode, 'div', null);
        this.renderer.setElementAttribute(this._el_0, 'class', 'form-field clearfix');
        this._text_1 = this.renderer.createText(this._el_0, '\n    ', null);
        this._el_2 = this.renderer.createElement(this._el_0, 'div', null);
        this.renderer.setElementAttribute(this._el_2, 'class', 'clearfix');
        this._text_3 = this.renderer.createText(this._el_2, '\n        ', null);
        this._el_4 = this.renderer.createElement(this._el_2, 'div', null);
        this.renderer.setElementAttribute(this._el_4, 'class', 'left');
        this._text_5 = this.renderer.createText(this._el_4, '\n            ', null);
        this._el_6 = this.renderer.createElement(this._el_4, 'div', null);
        this.renderer.setElementAttribute(this._el_6, 'class', 'form-label');
        this._text_7 = this.renderer.createText(this._el_6, '\n                ', null);
        this._el_8 = this.renderer.createElement(this._el_6, 'label', null);
        this.renderer.setElementAttribute(this._el_8, 'for', 'DisplayNav');
        this._text_9 = this.renderer.createText(this._el_8, 'Display', null);
        this._text_10 = this.renderer.createText(this._el_6, '\n            ', null);
        this._text_11 = this.renderer.createText(this._el_4, '\n            ', null);
        this._el_12 = this.renderer.createElement(this._el_4, 'div', null);
        this.renderer.setElementAttribute(this._el_12, 'class', 'checkbox-wrapper');
        this._text_13 = this.renderer.createText(this._el_12, '\n                ', null);
        this._el_14 = this.renderer.createElement(this._el_12, 'input', null);
        this.renderer.setElementAttribute(this._el_14, 'id', 'DisplayNav');
        this.renderer.setElementAttribute(this._el_14, 'type', 'checkbox');
        this._CheckboxControlValueAccessor_14_3 = new import10.CheckboxControlValueAccessor(this.renderer, new import15.ElementRef(this._el_14));
        this._NG_VALUE_ACCESSOR_14_4 = [this._CheckboxControlValueAccessor_14_3];
        this._NgModel_14_5 = new import11.NgModel(null, null, null, this._NG_VALUE_ACCESSOR_14_4);
        this._NgControl_14_6 = this._NgModel_14_5;
        this._NgControlStatus_14_7 = new import12.NgControlStatus(this._NgControl_14_6);
        this._text_15 = this.renderer.createText(this._el_12, '\n\n                ', null);
        this._el_16 = this.renderer.createElement(this._el_12, 'label', null);
        this.renderer.setElementAttribute(this._el_16, 'for', 'DisplayNav');
        this._text_17 = this.renderer.createText(this._el_12, '\n            ', null);
        this._text_18 = this.renderer.createText(this._el_4, '\n        ', null);
        this._text_19 = this.renderer.createText(this._el_2, '\n\n        ', null);
        this._el_20 = this.renderer.createElement(this._el_2, 'div', null);
        this.renderer.setElementAttribute(this._el_20, 'class', 'left left20');
        this._text_21 = this.renderer.createText(this._el_20, '\n            ', null);
        this._el_22 = this.renderer.createElement(this._el_20, 'div', null);
        this.renderer.setElementAttribute(this._el_22, 'class', 'form-label');
        this._text_23 = this.renderer.createText(this._el_22, '\n                ', null);
        this._el_24 = this.renderer.createElement(this._el_22, 'label', null);
        this.renderer.setElementAttribute(this._el_24, 'for', 'positionAbsolute');
        this._text_25 = this.renderer.createText(this._el_24, 'Top', null);
        this._text_26 = this.renderer.createText(this._el_22, '\n            ', null);
        this._text_27 = this.renderer.createText(this._el_20, '\n            ', null);
        this._el_28 = this.renderer.createElement(this._el_20, 'div', null);
        this.renderer.setElementAttribute(this._el_28, 'class', 'checkbox-wrapper');
        this._text_29 = this.renderer.createText(this._el_28, '\n                ', null);
        this._el_30 = this.renderer.createElement(this._el_28, 'input', null);
        this.renderer.setElementAttribute(this._el_30, 'id', 'positionAbsolute');
        this.renderer.setElementAttribute(this._el_30, 'type', 'checkbox');
        this._CheckboxControlValueAccessor_30_3 = new import10.CheckboxControlValueAccessor(this.renderer, new import15.ElementRef(this._el_30));
        this._NG_VALUE_ACCESSOR_30_4 = [this._CheckboxControlValueAccessor_30_3];
        this._NgModel_30_5 = new import11.NgModel(null, null, null, this._NG_VALUE_ACCESSOR_30_4);
        this._NgControl_30_6 = this._NgModel_30_5;
        this._NgControlStatus_30_7 = new import12.NgControlStatus(this._NgControl_30_6);
        this._text_31 = this.renderer.createText(this._el_28, '\n\n                ', null);
        this._el_32 = this.renderer.createElement(this._el_28, 'label', null);
        this.renderer.setElementAttribute(this._el_32, 'for', 'positionAbsolute');
        this._text_33 = this.renderer.createText(this._el_28, '\n            ', null);
        this._text_34 = this.renderer.createText(this._el_20, '\n        ', null);
        this._text_35 = this.renderer.createText(this._el_2, '\n\n        ', null);
        this._el_36 = this.renderer.createElement(this._el_2, 'div', null);
        this.renderer.setElementAttribute(this._el_36, 'class', 'left left20');
        this._text_37 = this.renderer.createText(this._el_36, '\n            ', null);
        this._el_38 = this.renderer.createElement(this._el_36, 'div', null);
        this.renderer.setElementAttribute(this._el_38, 'class', 'form-label');
        this._text_39 = this.renderer.createText(this._el_38, '\n                ', null);
        this._el_40 = this.renderer.createElement(this._el_38, 'label', null);
        this.renderer.setElementAttribute(this._el_40, 'for', 'alignRight');
        this._text_41 = this.renderer.createText(this._el_40, 'Right', null);
        this._text_42 = this.renderer.createText(this._el_38, '\n            ', null);
        this._text_43 = this.renderer.createText(this._el_36, '\n            ', null);
        this._el_44 = this.renderer.createElement(this._el_36, 'div', null);
        this.renderer.setElementAttribute(this._el_44, 'class', 'checkbox-wrapper');
        this._text_45 = this.renderer.createText(this._el_44, '\n                ', null);
        this._el_46 = this.renderer.createElement(this._el_44, 'input', null);
        this.renderer.setElementAttribute(this._el_46, 'id', 'alignRight');
        this.renderer.setElementAttribute(this._el_46, 'type', 'checkbox');
        this._CheckboxControlValueAccessor_46_3 = new import10.CheckboxControlValueAccessor(this.renderer, new import15.ElementRef(this._el_46));
        this._NG_VALUE_ACCESSOR_46_4 = [this._CheckboxControlValueAccessor_46_3];
        this._NgModel_46_5 = new import11.NgModel(null, null, null, this._NG_VALUE_ACCESSOR_46_4);
        this._NgControl_46_6 = this._NgModel_46_5;
        this._NgControlStatus_46_7 = new import12.NgControlStatus(this._NgControl_46_6);
        this._text_47 = this.renderer.createText(this._el_44, '\n\n                ', null);
        this._el_48 = this.renderer.createElement(this._el_44, 'label', null);
        this.renderer.setElementAttribute(this._el_48, 'for', 'alignRight');
        this._text_49 = this.renderer.createText(this._el_44, '\n            ', null);
        this._text_50 = this.renderer.createText(this._el_36, '\n        ', null);
        this._text_51 = this.renderer.createText(this._el_2, '\n\n        ', null);
        this._el_52 = this.renderer.createElement(this._el_2, 'div', null);
        this.renderer.setElementAttribute(this._el_52, 'class', 'left left20');
        this._text_53 = this.renderer.createText(this._el_52, '\n            ', null);
        this._el_54 = this.renderer.createElement(this._el_52, 'div', null);
        this.renderer.setElementAttribute(this._el_54, 'class', 'form-label');
        this._text_55 = this.renderer.createText(this._el_54, '\n                ', null);
        this._el_56 = this.renderer.createElement(this._el_54, 'label', null);
        this.renderer.setElementAttribute(this._el_56, 'for', 'BackgroundColor');
        this._text_57 = this.renderer.createText(this._el_56, 'Background', null);
        this._text_58 = this.renderer.createText(this._el_54, '\n            ', null);
        this._text_59 = this.renderer.createText(this._el_52, '\n            ', null);
        this._el_60 = this.renderer.createElement(this._el_52, 'input', null);
        this.renderer.setElementAttribute(this._el_60, 'class', 'colorpicker');
        this.renderer.setElementAttribute(this._el_60, 'id', 'BackgroundColor');
        this._appEl_60 = new import2.AppElement(60, 52, this, this._el_60);
        this._ColorPickerDirective_60_5 = new import13.ColorPickerDirective(this.parentInjector.get(import16.Compiler), this._appEl_60.vcRef, new import15.ElementRef(this._el_60), this.parentInjector.get(import17.ColorPickerService));
        this._text_61 = this.renderer.createText(this._el_52, '\n        ', null);
        this._text_62 = this.renderer.createText(this._el_2, '\n\n        ', null);
        this._el_63 = this.renderer.createElement(this._el_2, 'div', null);
        this.renderer.setElementAttribute(this._el_63, 'class', 'left left20');
        this._text_64 = this.renderer.createText(this._el_63, '\n            ', null);
        this._el_65 = this.renderer.createElement(this._el_63, 'div', null);
        this.renderer.setElementAttribute(this._el_65, 'class', 'form-label');
        this._text_66 = this.renderer.createText(this._el_65, '\n                ', null);
        this._el_67 = this.renderer.createElement(this._el_65, 'label', null);
        this.renderer.setElementAttribute(this._el_67, 'for', 'TabColor');
        this._text_68 = this.renderer.createText(this._el_67, 'Tab', null);
        this._text_69 = this.renderer.createText(this._el_65, '\n            ', null);
        this._text_70 = this.renderer.createText(this._el_63, '\n            ', null);
        this._el_71 = this.renderer.createElement(this._el_63, 'input', null);
        this.renderer.setElementAttribute(this._el_71, 'class', 'colorpicker');
        this.renderer.setElementAttribute(this._el_71, 'id', 'TabColor');
        this._appEl_71 = new import2.AppElement(71, 63, this, this._el_71);
        this._ColorPickerDirective_71_5 = new import13.ColorPickerDirective(this.parentInjector.get(import16.Compiler), this._appEl_71.vcRef, new import15.ElementRef(this._el_71), this.parentInjector.get(import17.ColorPickerService));
        this._text_72 = this.renderer.createText(this._el_63, '\n        ', null);
        this._text_73 = this.renderer.createText(this._el_2, '\n\n        ', null);
        this._el_74 = this.renderer.createElement(this._el_2, 'div', null);
        this.renderer.setElementAttribute(this._el_74, 'class', 'left left20');
        this._text_75 = this.renderer.createText(this._el_74, '\n            ', null);
        this._el_76 = this.renderer.createElement(this._el_74, 'div', null);
        this.renderer.setElementAttribute(this._el_76, 'class', 'form-label');
        this._text_77 = this.renderer.createText(this._el_76, '\n                ', null);
        this._el_78 = this.renderer.createElement(this._el_76, 'label', null);
        this.renderer.setElementAttribute(this._el_78, 'for', 'FontColor');
        this._text_79 = this.renderer.createText(this._el_78, 'Font', null);
        this._text_80 = this.renderer.createText(this._el_76, '\n            ', null);
        this._text_81 = this.renderer.createText(this._el_74, '\n            ', null);
        this._el_82 = this.renderer.createElement(this._el_74, 'input', null);
        this.renderer.setElementAttribute(this._el_82, 'class', 'colorpicker');
        this.renderer.setElementAttribute(this._el_82, 'id', 'FontColor');
        this._appEl_82 = new import2.AppElement(82, 74, this, this._el_82);
        this._ColorPickerDirective_82_5 = new import13.ColorPickerDirective(this.parentInjector.get(import16.Compiler), this._appEl_82.vcRef, new import15.ElementRef(this._el_82), this.parentInjector.get(import17.ColorPickerService));
        this._text_83 = this.renderer.createText(this._el_74, '\n        ', null);
        this._text_84 = this.renderer.createText(this._el_2, '\n    ', null);
        this._text_85 = this.renderer.createText(this._el_0, '\n    ', null);
        this._el_86 = this.renderer.createElement(this._el_0, 'div', null);
        this.renderer.setElementAttribute(this._el_86, 'class', 'clearfix');
        this._text_87 = this.renderer.createText(this._el_86, '\n        ', null);
        this._el_88 = this.renderer.createElement(this._el_86, 'dip-combobox', null);
        this._appEl_88 = new import2.AppElement(88, 86, this, this._el_88);
        var compView_88 = import18.viewFactory_ComboboxComponent0(this.viewUtils, this.injector(88), this._appEl_88);
        this._ComboboxComponent_88_4 = new import14.ComboboxComponent();
        this._appEl_88.initComponent(this._ComboboxComponent_88_4, [], compView_88);
        compView_88.create(this._ComboboxComponent_88_4, [], null);
        this._text_89 = this.renderer.createText(this._el_86, '\n    ', null);
        this._text_90 = this.renderer.createText(this._el_0, '\n', null);
        this._expr_3 = import7.UNINITIALIZED;
        var disposable_0 = this.renderer.listen(this._el_14, 'ngModelChange', this.eventHandler(this._handle_ngModelChange_14_0.bind(this)));
        var disposable_1 = this.renderer.listen(this._el_14, 'change', this.eventHandler(this._handle_change_14_1.bind(this)));
        var disposable_2 = this.renderer.listen(this._el_14, 'blur', this.eventHandler(this._handle_blur_14_2.bind(this)));
        this._expr_4 = import7.UNINITIALIZED;
        var subscription_0 = this._NgModel_14_5.update.subscribe(this.eventHandler(this._handle_ngModelChange_14_0.bind(this)));
        this._expr_5 = import7.UNINITIALIZED;
        this._expr_6 = import7.UNINITIALIZED;
        this._expr_7 = import7.UNINITIALIZED;
        this._expr_8 = import7.UNINITIALIZED;
        this._expr_9 = import7.UNINITIALIZED;
        this._expr_10 = import7.UNINITIALIZED;
        this._expr_14 = import7.UNINITIALIZED;
        var disposable_3 = this.renderer.listen(this._el_30, 'ngModelChange', this.eventHandler(this._handle_ngModelChange_30_0.bind(this)));
        var disposable_4 = this.renderer.listen(this._el_30, 'change', this.eventHandler(this._handle_change_30_1.bind(this)));
        var disposable_5 = this.renderer.listen(this._el_30, 'blur', this.eventHandler(this._handle_blur_30_2.bind(this)));
        this._expr_15 = import7.UNINITIALIZED;
        var subscription_1 = this._NgModel_30_5.update.subscribe(this.eventHandler(this._handle_ngModelChange_30_0.bind(this)));
        this._expr_16 = import7.UNINITIALIZED;
        this._expr_17 = import7.UNINITIALIZED;
        this._expr_18 = import7.UNINITIALIZED;
        this._expr_19 = import7.UNINITIALIZED;
        this._expr_20 = import7.UNINITIALIZED;
        this._expr_21 = import7.UNINITIALIZED;
        this._expr_25 = import7.UNINITIALIZED;
        var disposable_6 = this.renderer.listen(this._el_46, 'ngModelChange', this.eventHandler(this._handle_ngModelChange_46_0.bind(this)));
        var disposable_7 = this.renderer.listen(this._el_46, 'change', this.eventHandler(this._handle_change_46_1.bind(this)));
        var disposable_8 = this.renderer.listen(this._el_46, 'blur', this.eventHandler(this._handle_blur_46_2.bind(this)));
        this._expr_26 = import7.UNINITIALIZED;
        var subscription_2 = this._NgModel_46_5.update.subscribe(this.eventHandler(this._handle_ngModelChange_46_0.bind(this)));
        this._expr_27 = import7.UNINITIALIZED;
        this._expr_28 = import7.UNINITIALIZED;
        this._expr_29 = import7.UNINITIALIZED;
        this._expr_30 = import7.UNINITIALIZED;
        this._expr_31 = import7.UNINITIALIZED;
        this._expr_32 = import7.UNINITIALIZED;
        this._expr_36 = import7.UNINITIALIZED;
        var disposable_9 = this.renderer.listen(this._el_60, 'colorPickerChange', this.eventHandler(this._handle_colorPickerChange_60_0.bind(this)));
        var disposable_10 = this.renderer.listen(this._el_60, 'input', this.eventHandler(this._handle_input_60_1.bind(this)));
        var disposable_11 = this.renderer.listen(this._el_60, 'click', this.eventHandler(this._handle_click_60_2.bind(this)));
        this._expr_37 = import7.UNINITIALIZED;
        this._expr_38 = import7.UNINITIALIZED;
        this._expr_39 = import7.UNINITIALIZED;
        this._expr_40 = import7.UNINITIALIZED;
        var subscription_3 = this._ColorPickerDirective_60_5.colorPickerChange.subscribe(this.eventHandler(this._handle_colorPickerChange_60_0.bind(this)));
        this._expr_44 = import7.UNINITIALIZED;
        var disposable_12 = this.renderer.listen(this._el_71, 'colorPickerChange', this.eventHandler(this._handle_colorPickerChange_71_0.bind(this)));
        var disposable_13 = this.renderer.listen(this._el_71, 'input', this.eventHandler(this._handle_input_71_1.bind(this)));
        var disposable_14 = this.renderer.listen(this._el_71, 'click', this.eventHandler(this._handle_click_71_2.bind(this)));
        this._expr_45 = import7.UNINITIALIZED;
        this._expr_46 = import7.UNINITIALIZED;
        this._expr_47 = import7.UNINITIALIZED;
        this._expr_48 = import7.UNINITIALIZED;
        var subscription_4 = this._ColorPickerDirective_71_5.colorPickerChange.subscribe(this.eventHandler(this._handle_colorPickerChange_71_0.bind(this)));
        this._expr_52 = import7.UNINITIALIZED;
        var disposable_15 = this.renderer.listen(this._el_82, 'colorPickerChange', this.eventHandler(this._handle_colorPickerChange_82_0.bind(this)));
        var disposable_16 = this.renderer.listen(this._el_82, 'input', this.eventHandler(this._handle_input_82_1.bind(this)));
        var disposable_17 = this.renderer.listen(this._el_82, 'click', this.eventHandler(this._handle_click_82_2.bind(this)));
        this._expr_53 = import7.UNINITIALIZED;
        this._expr_54 = import7.UNINITIALIZED;
        this._expr_55 = import7.UNINITIALIZED;
        this._expr_56 = import7.UNINITIALIZED;
        this._expr_57 = import7.UNINITIALIZED;
        this._expr_58 = import7.UNINITIALIZED;
        var subscription_5 = this._ColorPickerDirective_82_5.colorPickerChange.subscribe(this.eventHandler(this._handle_colorPickerChange_82_0.bind(this)));
        var disposable_18 = this.renderer.listen(this._el_88, 'selected', this.eventHandler(this._handle_selected_88_0.bind(this)));
        this._expr_60 = import7.UNINITIALIZED;
        this._expr_61 = import7.UNINITIALIZED;
        this._map_0 = import4.pureProxy1(function (p0) {
            return { width: p0 };
        });
        this._expr_62 = import7.UNINITIALIZED;
        var subscription_6 = this._ComboboxComponent_88_4.selected.subscribe(this.eventHandler(this._handle_selected_88_0.bind(this)));
        this.init([], [
            this._el_0,
            this._text_1,
            this._el_2,
            this._text_3,
            this._el_4,
            this._text_5,
            this._el_6,
            this._text_7,
            this._el_8,
            this._text_9,
            this._text_10,
            this._text_11,
            this._el_12,
            this._text_13,
            this._el_14,
            this._text_15,
            this._el_16,
            this._text_17,
            this._text_18,
            this._text_19,
            this._el_20,
            this._text_21,
            this._el_22,
            this._text_23,
            this._el_24,
            this._text_25,
            this._text_26,
            this._text_27,
            this._el_28,
            this._text_29,
            this._el_30,
            this._text_31,
            this._el_32,
            this._text_33,
            this._text_34,
            this._text_35,
            this._el_36,
            this._text_37,
            this._el_38,
            this._text_39,
            this._el_40,
            this._text_41,
            this._text_42,
            this._text_43,
            this._el_44,
            this._text_45,
            this._el_46,
            this._text_47,
            this._el_48,
            this._text_49,
            this._text_50,
            this._text_51,
            this._el_52,
            this._text_53,
            this._el_54,
            this._text_55,
            this._el_56,
            this._text_57,
            this._text_58,
            this._text_59,
            this._el_60,
            this._text_61,
            this._text_62,
            this._el_63,
            this._text_64,
            this._el_65,
            this._text_66,
            this._el_67,
            this._text_68,
            this._text_69,
            this._text_70,
            this._el_71,
            this._text_72,
            this._text_73,
            this._el_74,
            this._text_75,
            this._el_76,
            this._text_77,
            this._el_78,
            this._text_79,
            this._text_80,
            this._text_81,
            this._el_82,
            this._text_83,
            this._text_84,
            this._text_85,
            this._el_86,
            this._text_87,
            this._el_88,
            this._text_89,
            this._text_90
        ], [
            disposable_0,
            disposable_1,
            disposable_2,
            disposable_3,
            disposable_4,
            disposable_5,
            disposable_6,
            disposable_7,
            disposable_8,
            disposable_9,
            disposable_10,
            disposable_11,
            disposable_12,
            disposable_13,
            disposable_14,
            disposable_15,
            disposable_16,
            disposable_17,
            disposable_18
        ], [
            subscription_0,
            subscription_1,
            subscription_2,
            subscription_3,
            subscription_4,
            subscription_5,
            subscription_6
        ]);
        return null;
    };
    _View_NavStyleComponent0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import10.CheckboxControlValueAccessor) && (14 === requestNodeIndex))) {
            return this._CheckboxControlValueAccessor_14_3;
        }
        if (((token === import19.NG_VALUE_ACCESSOR) && (14 === requestNodeIndex))) {
            return this._NG_VALUE_ACCESSOR_14_4;
        }
        if (((token === import11.NgModel) && (14 === requestNodeIndex))) {
            return this._NgModel_14_5;
        }
        if (((token === import20.NgControl) && (14 === requestNodeIndex))) {
            return this._NgControl_14_6;
        }
        if (((token === import12.NgControlStatus) && (14 === requestNodeIndex))) {
            return this._NgControlStatus_14_7;
        }
        if (((token === import10.CheckboxControlValueAccessor) && (30 === requestNodeIndex))) {
            return this._CheckboxControlValueAccessor_30_3;
        }
        if (((token === import19.NG_VALUE_ACCESSOR) && (30 === requestNodeIndex))) {
            return this._NG_VALUE_ACCESSOR_30_4;
        }
        if (((token === import11.NgModel) && (30 === requestNodeIndex))) {
            return this._NgModel_30_5;
        }
        if (((token === import20.NgControl) && (30 === requestNodeIndex))) {
            return this._NgControl_30_6;
        }
        if (((token === import12.NgControlStatus) && (30 === requestNodeIndex))) {
            return this._NgControlStatus_30_7;
        }
        if (((token === import10.CheckboxControlValueAccessor) && (46 === requestNodeIndex))) {
            return this._CheckboxControlValueAccessor_46_3;
        }
        if (((token === import19.NG_VALUE_ACCESSOR) && (46 === requestNodeIndex))) {
            return this._NG_VALUE_ACCESSOR_46_4;
        }
        if (((token === import11.NgModel) && (46 === requestNodeIndex))) {
            return this._NgModel_46_5;
        }
        if (((token === import20.NgControl) && (46 === requestNodeIndex))) {
            return this._NgControl_46_6;
        }
        if (((token === import12.NgControlStatus) && (46 === requestNodeIndex))) {
            return this._NgControlStatus_46_7;
        }
        if (((token === import13.ColorPickerDirective) && (60 === requestNodeIndex))) {
            return this._ColorPickerDirective_60_5;
        }
        if (((token === import13.ColorPickerDirective) && (71 === requestNodeIndex))) {
            return this._ColorPickerDirective_71_5;
        }
        if (((token === import13.ColorPickerDirective) && (82 === requestNodeIndex))) {
            return this._ColorPickerDirective_82_5;
        }
        if (((token === import14.ComboboxComponent) && (88 === requestNodeIndex))) {
            return this._ComboboxComponent_88_4;
        }
        return notFoundResult;
    };
    _View_NavStyleComponent0.prototype.detectChangesInternal = function (throwOnChange) {
        var changes = null;
        changes = null;
        var currVal_4 = this.context.nav.display;
        if (import4.checkBinding(throwOnChange, this._expr_4, currVal_4)) {
            this._NgModel_14_5.model = currVal_4;
            if ((changes === null)) {
                (changes = {});
            }
            changes['model'] = new import7.SimpleChange(this._expr_4, currVal_4);
            this._expr_4 = currVal_4;
        }
        if ((changes !== null)) {
            this._NgModel_14_5.ngOnChanges(changes);
        }
        changes = null;
        var currVal_15 = this.context.nav.absolute;
        if (import4.checkBinding(throwOnChange, this._expr_15, currVal_15)) {
            this._NgModel_30_5.model = currVal_15;
            if ((changes === null)) {
                (changes = {});
            }
            changes['model'] = new import7.SimpleChange(this._expr_15, currVal_15);
            this._expr_15 = currVal_15;
        }
        if ((changes !== null)) {
            this._NgModel_30_5.ngOnChanges(changes);
        }
        changes = null;
        var currVal_26 = this.context.nav.align_right;
        if (import4.checkBinding(throwOnChange, this._expr_26, currVal_26)) {
            this._NgModel_46_5.model = currVal_26;
            if ((changes === null)) {
                (changes = {});
            }
            changes['model'] = new import7.SimpleChange(this._expr_26, currVal_26);
            this._expr_26 = currVal_26;
        }
        if ((changes !== null)) {
            this._NgModel_46_5.ngOnChanges(changes);
        }
        changes = null;
        var currVal_37 = this.context.nav.background;
        if (import4.checkBinding(throwOnChange, this._expr_37, currVal_37)) {
            this._ColorPickerDirective_60_5.colorPicker = currVal_37;
            if ((changes === null)) {
                (changes = {});
            }
            changes['colorPicker'] = new import7.SimpleChange(this._expr_37, currVal_37);
            this._expr_37 = currVal_37;
        }
        var currVal_38 = 'bottom';
        if (import4.checkBinding(throwOnChange, this._expr_38, currVal_38)) {
            this._ColorPickerDirective_60_5.cpPosition = currVal_38;
            if ((changes === null)) {
                (changes = {});
            }
            changes['cpPosition'] = new import7.SimpleChange(this._expr_38, currVal_38);
            this._expr_38 = currVal_38;
        }
        var currVal_39 = true;
        if (import4.checkBinding(throwOnChange, this._expr_39, currVal_39)) {
            this._ColorPickerDirective_60_5.cpCancelButton = currVal_39;
            if ((changes === null)) {
                (changes = {});
            }
            changes['cpCancelButton'] = new import7.SimpleChange(this._expr_39, currVal_39);
            this._expr_39 = currVal_39;
        }
        var currVal_40 = 'colorpicker-button button';
        if (import4.checkBinding(throwOnChange, this._expr_40, currVal_40)) {
            this._ColorPickerDirective_60_5.cpCancelButtonClass = currVal_40;
            if ((changes === null)) {
                (changes = {});
            }
            changes['cpCancelButtonClass'] = new import7.SimpleChange(this._expr_40, currVal_40);
            this._expr_40 = currVal_40;
        }
        if ((changes !== null)) {
            this._ColorPickerDirective_60_5.ngOnChanges(changes);
        }
        if (((this.numberOfChecks === 0) && !throwOnChange)) {
            this._ColorPickerDirective_60_5.ngOnInit();
        }
        changes = null;
        var currVal_45 = this.context.nav.tab_color;
        if (import4.checkBinding(throwOnChange, this._expr_45, currVal_45)) {
            this._ColorPickerDirective_71_5.colorPicker = currVal_45;
            if ((changes === null)) {
                (changes = {});
            }
            changes['colorPicker'] = new import7.SimpleChange(this._expr_45, currVal_45);
            this._expr_45 = currVal_45;
        }
        var currVal_46 = 'bottom';
        if (import4.checkBinding(throwOnChange, this._expr_46, currVal_46)) {
            this._ColorPickerDirective_71_5.cpPosition = currVal_46;
            if ((changes === null)) {
                (changes = {});
            }
            changes['cpPosition'] = new import7.SimpleChange(this._expr_46, currVal_46);
            this._expr_46 = currVal_46;
        }
        var currVal_47 = true;
        if (import4.checkBinding(throwOnChange, this._expr_47, currVal_47)) {
            this._ColorPickerDirective_71_5.cpCancelButton = currVal_47;
            if ((changes === null)) {
                (changes = {});
            }
            changes['cpCancelButton'] = new import7.SimpleChange(this._expr_47, currVal_47);
            this._expr_47 = currVal_47;
        }
        var currVal_48 = 'colorpicker-button button';
        if (import4.checkBinding(throwOnChange, this._expr_48, currVal_48)) {
            this._ColorPickerDirective_71_5.cpCancelButtonClass = currVal_48;
            if ((changes === null)) {
                (changes = {});
            }
            changes['cpCancelButtonClass'] = new import7.SimpleChange(this._expr_48, currVal_48);
            this._expr_48 = currVal_48;
        }
        if ((changes !== null)) {
            this._ColorPickerDirective_71_5.ngOnChanges(changes);
        }
        if (((this.numberOfChecks === 0) && !throwOnChange)) {
            this._ColorPickerDirective_71_5.ngOnInit();
        }
        changes = null;
        var currVal_53 = this.context.nav.font_color;
        if (import4.checkBinding(throwOnChange, this._expr_53, currVal_53)) {
            this._ColorPickerDirective_82_5.colorPicker = currVal_53;
            if ((changes === null)) {
                (changes = {});
            }
            changes['colorPicker'] = new import7.SimpleChange(this._expr_53, currVal_53);
            this._expr_53 = currVal_53;
        }
        var currVal_54 = 'bottom';
        if (import4.checkBinding(throwOnChange, this._expr_54, currVal_54)) {
            this._ColorPickerDirective_82_5.cpPosition = currVal_54;
            if ((changes === null)) {
                (changes = {});
            }
            changes['cpPosition'] = new import7.SimpleChange(this._expr_54, currVal_54);
            this._expr_54 = currVal_54;
        }
        var currVal_55 = true;
        if (import4.checkBinding(throwOnChange, this._expr_55, currVal_55)) {
            this._ColorPickerDirective_82_5.cpCancelButton = currVal_55;
            if ((changes === null)) {
                (changes = {});
            }
            changes['cpCancelButton'] = new import7.SimpleChange(this._expr_55, currVal_55);
            this._expr_55 = currVal_55;
        }
        var currVal_56 = 'colorpicker-button button';
        if (import4.checkBinding(throwOnChange, this._expr_56, currVal_56)) {
            this._ColorPickerDirective_82_5.cpCancelButtonClass = currVal_56;
            if ((changes === null)) {
                (changes = {});
            }
            changes['cpCancelButtonClass'] = new import7.SimpleChange(this._expr_56, currVal_56);
            this._expr_56 = currVal_56;
        }
        var currVal_57 = true;
        if (import4.checkBinding(throwOnChange, this._expr_57, currVal_57)) {
            this._ColorPickerDirective_82_5.cpOKButton = currVal_57;
            if ((changes === null)) {
                (changes = {});
            }
            changes['cpOKButton'] = new import7.SimpleChange(this._expr_57, currVal_57);
            this._expr_57 = currVal_57;
        }
        var currVal_58 = 'colorpicker-button button right10';
        if (import4.checkBinding(throwOnChange, this._expr_58, currVal_58)) {
            this._ColorPickerDirective_82_5.cpOKButtonClass = currVal_58;
            if ((changes === null)) {
                (changes = {});
            }
            changes['cpOKButtonClass'] = new import7.SimpleChange(this._expr_58, currVal_58);
            this._expr_58 = currVal_58;
        }
        if ((changes !== null)) {
            this._ColorPickerDirective_82_5.ngOnChanges(changes);
        }
        if (((this.numberOfChecks === 0) && !throwOnChange)) {
            this._ColorPickerDirective_82_5.ngOnInit();
        }
        var currVal_60 = this.context.font_sizes;
        if (import4.checkBinding(throwOnChange, this._expr_60, currVal_60)) {
            this._ComboboxComponent_88_4.items = currVal_60;
            this._expr_60 = currVal_60;
        }
        var currVal_61 = this.context.nav.font_size;
        if (import4.checkBinding(throwOnChange, this._expr_61, currVal_61)) {
            this._ComboboxComponent_88_4.selectedItem = currVal_61;
            this._expr_61 = currVal_61;
        }
        var currVal_62 = this._map_0('200px');
        if (import4.checkBinding(throwOnChange, this._expr_62, currVal_62)) {
            this._ComboboxComponent_88_4.cbStyle = currVal_62;
            this._expr_62 = currVal_62;
        }
        if (((this.numberOfChecks === 0) && !throwOnChange)) {
            this._ComboboxComponent_88_4.ngOnInit();
        }
        this.detectContentChildrenChanges(throwOnChange);
        var currVal_3 = this.context.nav.display;
        if (import4.checkBinding(throwOnChange, this._expr_3, currVal_3)) {
            this.renderer.setElementProperty(this._el_14, 'checked', currVal_3);
            this._expr_3 = currVal_3;
        }
        var currVal_5 = this._NgControlStatus_14_7.ngClassUntouched;
        if (import4.checkBinding(throwOnChange, this._expr_5, currVal_5)) {
            this.renderer.setElementClass(this._el_14, 'ng-untouched', currVal_5);
            this._expr_5 = currVal_5;
        }
        var currVal_6 = this._NgControlStatus_14_7.ngClassTouched;
        if (import4.checkBinding(throwOnChange, this._expr_6, currVal_6)) {
            this.renderer.setElementClass(this._el_14, 'ng-touched', currVal_6);
            this._expr_6 = currVal_6;
        }
        var currVal_7 = this._NgControlStatus_14_7.ngClassPristine;
        if (import4.checkBinding(throwOnChange, this._expr_7, currVal_7)) {
            this.renderer.setElementClass(this._el_14, 'ng-pristine', currVal_7);
            this._expr_7 = currVal_7;
        }
        var currVal_8 = this._NgControlStatus_14_7.ngClassDirty;
        if (import4.checkBinding(throwOnChange, this._expr_8, currVal_8)) {
            this.renderer.setElementClass(this._el_14, 'ng-dirty', currVal_8);
            this._expr_8 = currVal_8;
        }
        var currVal_9 = this._NgControlStatus_14_7.ngClassValid;
        if (import4.checkBinding(throwOnChange, this._expr_9, currVal_9)) {
            this.renderer.setElementClass(this._el_14, 'ng-valid', currVal_9);
            this._expr_9 = currVal_9;
        }
        var currVal_10 = this._NgControlStatus_14_7.ngClassInvalid;
        if (import4.checkBinding(throwOnChange, this._expr_10, currVal_10)) {
            this.renderer.setElementClass(this._el_14, 'ng-invalid', currVal_10);
            this._expr_10 = currVal_10;
        }
        var currVal_14 = this.context.nav.absolute;
        if (import4.checkBinding(throwOnChange, this._expr_14, currVal_14)) {
            this.renderer.setElementProperty(this._el_30, 'checked', currVal_14);
            this._expr_14 = currVal_14;
        }
        var currVal_16 = this._NgControlStatus_30_7.ngClassUntouched;
        if (import4.checkBinding(throwOnChange, this._expr_16, currVal_16)) {
            this.renderer.setElementClass(this._el_30, 'ng-untouched', currVal_16);
            this._expr_16 = currVal_16;
        }
        var currVal_17 = this._NgControlStatus_30_7.ngClassTouched;
        if (import4.checkBinding(throwOnChange, this._expr_17, currVal_17)) {
            this.renderer.setElementClass(this._el_30, 'ng-touched', currVal_17);
            this._expr_17 = currVal_17;
        }
        var currVal_18 = this._NgControlStatus_30_7.ngClassPristine;
        if (import4.checkBinding(throwOnChange, this._expr_18, currVal_18)) {
            this.renderer.setElementClass(this._el_30, 'ng-pristine', currVal_18);
            this._expr_18 = currVal_18;
        }
        var currVal_19 = this._NgControlStatus_30_7.ngClassDirty;
        if (import4.checkBinding(throwOnChange, this._expr_19, currVal_19)) {
            this.renderer.setElementClass(this._el_30, 'ng-dirty', currVal_19);
            this._expr_19 = currVal_19;
        }
        var currVal_20 = this._NgControlStatus_30_7.ngClassValid;
        if (import4.checkBinding(throwOnChange, this._expr_20, currVal_20)) {
            this.renderer.setElementClass(this._el_30, 'ng-valid', currVal_20);
            this._expr_20 = currVal_20;
        }
        var currVal_21 = this._NgControlStatus_30_7.ngClassInvalid;
        if (import4.checkBinding(throwOnChange, this._expr_21, currVal_21)) {
            this.renderer.setElementClass(this._el_30, 'ng-invalid', currVal_21);
            this._expr_21 = currVal_21;
        }
        var currVal_25 = this.context.nav.align_right;
        if (import4.checkBinding(throwOnChange, this._expr_25, currVal_25)) {
            this.renderer.setElementProperty(this._el_46, 'checked', currVal_25);
            this._expr_25 = currVal_25;
        }
        var currVal_27 = this._NgControlStatus_46_7.ngClassUntouched;
        if (import4.checkBinding(throwOnChange, this._expr_27, currVal_27)) {
            this.renderer.setElementClass(this._el_46, 'ng-untouched', currVal_27);
            this._expr_27 = currVal_27;
        }
        var currVal_28 = this._NgControlStatus_46_7.ngClassTouched;
        if (import4.checkBinding(throwOnChange, this._expr_28, currVal_28)) {
            this.renderer.setElementClass(this._el_46, 'ng-touched', currVal_28);
            this._expr_28 = currVal_28;
        }
        var currVal_29 = this._NgControlStatus_46_7.ngClassPristine;
        if (import4.checkBinding(throwOnChange, this._expr_29, currVal_29)) {
            this.renderer.setElementClass(this._el_46, 'ng-pristine', currVal_29);
            this._expr_29 = currVal_29;
        }
        var currVal_30 = this._NgControlStatus_46_7.ngClassDirty;
        if (import4.checkBinding(throwOnChange, this._expr_30, currVal_30)) {
            this.renderer.setElementClass(this._el_46, 'ng-dirty', currVal_30);
            this._expr_30 = currVal_30;
        }
        var currVal_31 = this._NgControlStatus_46_7.ngClassValid;
        if (import4.checkBinding(throwOnChange, this._expr_31, currVal_31)) {
            this.renderer.setElementClass(this._el_46, 'ng-valid', currVal_31);
            this._expr_31 = currVal_31;
        }
        var currVal_32 = this._NgControlStatus_46_7.ngClassInvalid;
        if (import4.checkBinding(throwOnChange, this._expr_32, currVal_32)) {
            this.renderer.setElementClass(this._el_46, 'ng-invalid', currVal_32);
            this._expr_32 = currVal_32;
        }
        var currVal_36 = this.context.nav.background;
        if (import4.checkBinding(throwOnChange, this._expr_36, currVal_36)) {
            this.renderer.setElementStyle(this._el_60, 'background', ((this.viewUtils.sanitizer.sanitize(import21.SecurityContext.STYLE, currVal_36) == null) ? null : this.viewUtils.sanitizer.sanitize(import21.SecurityContext.STYLE, currVal_36).toString()));
            this._expr_36 = currVal_36;
        }
        var currVal_44 = this.context.nav.tab_color;
        if (import4.checkBinding(throwOnChange, this._expr_44, currVal_44)) {
            this.renderer.setElementStyle(this._el_71, 'background', ((this.viewUtils.sanitizer.sanitize(import21.SecurityContext.STYLE, currVal_44) == null) ? null : this.viewUtils.sanitizer.sanitize(import21.SecurityContext.STYLE, currVal_44).toString()));
            this._expr_44 = currVal_44;
        }
        var currVal_52 = this.context.nav.font_color;
        if (import4.checkBinding(throwOnChange, this._expr_52, currVal_52)) {
            this.renderer.setElementStyle(this._el_82, 'background', ((this.viewUtils.sanitizer.sanitize(import21.SecurityContext.STYLE, currVal_52) == null) ? null : this.viewUtils.sanitizer.sanitize(import21.SecurityContext.STYLE, currVal_52).toString()));
            this._expr_52 = currVal_52;
        }
        this.detectViewChildrenChanges(throwOnChange);
    };
    _View_NavStyleComponent0.prototype.destroyInternal = function () {
        this._NgModel_14_5.ngOnDestroy();
        this._NgModel_30_5.ngOnDestroy();
        this._NgModel_46_5.ngOnDestroy();
    };
    _View_NavStyleComponent0.prototype._handle_ngModelChange_14_0 = function ($event) {
        this.markPathToRootAsCheckOnce();
        var pd_0 = ((this.context.nav.display = $event) !== false);
        return (true && pd_0);
    };
    _View_NavStyleComponent0.prototype._handle_change_14_1 = function ($event) {
        this.markPathToRootAsCheckOnce();
        var pd_0 = (this._CheckboxControlValueAccessor_14_3.onChange($event.target.checked) !== false);
        return (true && pd_0);
    };
    _View_NavStyleComponent0.prototype._handle_blur_14_2 = function ($event) {
        this.markPathToRootAsCheckOnce();
        var pd_0 = (this._CheckboxControlValueAccessor_14_3.onTouched() !== false);
        return (true && pd_0);
    };
    _View_NavStyleComponent0.prototype._handle_ngModelChange_30_0 = function ($event) {
        this.markPathToRootAsCheckOnce();
        var pd_0 = ((this.context.nav.absolute = $event) !== false);
        return (true && pd_0);
    };
    _View_NavStyleComponent0.prototype._handle_change_30_1 = function ($event) {
        this.markPathToRootAsCheckOnce();
        var pd_0 = (this._CheckboxControlValueAccessor_30_3.onChange($event.target.checked) !== false);
        return (true && pd_0);
    };
    _View_NavStyleComponent0.prototype._handle_blur_30_2 = function ($event) {
        this.markPathToRootAsCheckOnce();
        var pd_0 = (this._CheckboxControlValueAccessor_30_3.onTouched() !== false);
        return (true && pd_0);
    };
    _View_NavStyleComponent0.prototype._handle_ngModelChange_46_0 = function ($event) {
        this.markPathToRootAsCheckOnce();
        var pd_0 = ((this.context.nav.align_right = $event) !== false);
        return (true && pd_0);
    };
    _View_NavStyleComponent0.prototype._handle_change_46_1 = function ($event) {
        this.markPathToRootAsCheckOnce();
        var pd_0 = (this._CheckboxControlValueAccessor_46_3.onChange($event.target.checked) !== false);
        return (true && pd_0);
    };
    _View_NavStyleComponent0.prototype._handle_blur_46_2 = function ($event) {
        this.markPathToRootAsCheckOnce();
        var pd_0 = (this._CheckboxControlValueAccessor_46_3.onTouched() !== false);
        return (true && pd_0);
    };
    _View_NavStyleComponent0.prototype._handle_colorPickerChange_60_0 = function ($event) {
        this.markPathToRootAsCheckOnce();
        var pd_0 = ((this.context.nav.background = $event) !== false);
        return (true && pd_0);
    };
    _View_NavStyleComponent0.prototype._handle_input_60_1 = function ($event) {
        this.markPathToRootAsCheckOnce();
        var pd_0 = (this._ColorPickerDirective_60_5.changeInput($event.target.value) !== false);
        return (true && pd_0);
    };
    _View_NavStyleComponent0.prototype._handle_click_60_2 = function ($event) {
        this.markPathToRootAsCheckOnce();
        var pd_0 = (this._ColorPickerDirective_60_5.onClick() !== false);
        return (true && pd_0);
    };
    _View_NavStyleComponent0.prototype._handle_colorPickerChange_71_0 = function ($event) {
        this.markPathToRootAsCheckOnce();
        var pd_0 = ((this.context.nav.tab_color = $event) !== false);
        return (true && pd_0);
    };
    _View_NavStyleComponent0.prototype._handle_input_71_1 = function ($event) {
        this.markPathToRootAsCheckOnce();
        var pd_0 = (this._ColorPickerDirective_71_5.changeInput($event.target.value) !== false);
        return (true && pd_0);
    };
    _View_NavStyleComponent0.prototype._handle_click_71_2 = function ($event) {
        this.markPathToRootAsCheckOnce();
        var pd_0 = (this._ColorPickerDirective_71_5.onClick() !== false);
        return (true && pd_0);
    };
    _View_NavStyleComponent0.prototype._handle_colorPickerChange_82_0 = function ($event) {
        this.markPathToRootAsCheckOnce();
        var pd_0 = ((this.context.nav.font_color = $event) !== false);
        return (true && pd_0);
    };
    _View_NavStyleComponent0.prototype._handle_input_82_1 = function ($event) {
        this.markPathToRootAsCheckOnce();
        var pd_0 = (this._ColorPickerDirective_82_5.changeInput($event.target.value) !== false);
        return (true && pd_0);
    };
    _View_NavStyleComponent0.prototype._handle_click_82_2 = function ($event) {
        this.markPathToRootAsCheckOnce();
        var pd_0 = (this._ColorPickerDirective_82_5.onClick() !== false);
        return (true && pd_0);
    };
    _View_NavStyleComponent0.prototype._handle_selected_88_0 = function ($event) {
        this.markPathToRootAsCheckOnce();
        var pd_0 = (this.context.onFontSizeSelect($event) !== false);
        return (true && pd_0);
    };
    return _View_NavStyleComponent0;
}(import1.AppView));
export function viewFactory_NavStyleComponent0(viewUtils, parentInjector, declarationEl) {
    if ((renderType_NavStyleComponent === null)) {
        (renderType_NavStyleComponent = viewUtils.createRenderComponentType('', 0, import8.ViewEncapsulation.None, styles_NavStyleComponent, {}));
    }
    return new _View_NavStyleComponent0(viewUtils, parentInjector, declarationEl);
}
