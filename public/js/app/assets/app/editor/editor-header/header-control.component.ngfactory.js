/**
 * This file is generated by the Angular 2 template compiler.
 * Do not edit.
 */
/* tslint:disable */
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
import * as import1 from '@angular/core/src/linker/view';
import * as import2 from '@angular/core/src/linker/element';
import * as import3 from './header-control.component';
import * as import4 from '@angular/core/src/linker/view_utils';
import * as import6 from '@angular/core/src/linker/view_type';
import * as import7 from '@angular/core/src/change_detection/change_detection';
import * as import8 from '@angular/core/src/metadata/view';
import * as import9 from '@angular/core/src/linker/component_factory';
import * as import10 from '@angular/common/src/directives/ng_if';
import * as import11 from '@angular/core/src/linker/template_ref';
import * as import12 from '../shared/control-header.component';
import * as import13 from '../shared/control-header.component.ngfactory';
import * as import14 from '@angular/forms/src/directives/default_value_accessor';
import * as import15 from '@angular/forms/src/directives/ng_model';
import * as import16 from '@angular/forms/src/directives/ng_control_status';
import * as import17 from 'angular2-color-picker/lib/color-picker.directive';
import * as import18 from '../../shared/controls/combobox.component';
import * as import19 from '../../shared/controls/uploader/uploader.component';
import * as import20 from '@angular/core/src/linker/element_ref';
import * as import21 from '@angular/core/src/linker/compiler';
import * as import22 from 'angular2-color-picker/lib/color-picker.service';
import * as import23 from '../../shared/controls/combobox.component.ngfactory';
import * as import24 from '../../shared/controls/uploader/uploader.component.ngfactory';
import * as import25 from '@angular/forms/src/directives/control_value_accessor';
import * as import26 from '@angular/forms/src/directives/ng_control';
import * as import27 from '@angular/core/src/security';
import * as import28 from './header-style.component';
import * as import29 from './header-style.component.ngfactory';
var renderType_HeaderControlComponent_Host = null;
var _View_HeaderControlComponent_Host0 = (function (_super) {
    __extends(_View_HeaderControlComponent_Host0, _super);
    function _View_HeaderControlComponent_Host0(viewUtils, parentInjector, declarationEl) {
        _super.call(this, _View_HeaderControlComponent_Host0, renderType_HeaderControlComponent_Host, import6.ViewType.HOST, viewUtils, parentInjector, declarationEl, import7.ChangeDetectorStatus.CheckAlways);
    }
    _View_HeaderControlComponent_Host0.prototype.createInternal = function (rootSelector) {
        this._el_0 = this.selectOrCreateHostElement('dip-header-control', rootSelector, null);
        this._appEl_0 = new import2.AppElement(0, null, this, this._el_0);
        var compView_0 = viewFactory_HeaderControlComponent0(this.viewUtils, this.injector(0), this._appEl_0);
        this._HeaderControlComponent_0_4 = new import3.HeaderControlComponent();
        this._appEl_0.initComponent(this._HeaderControlComponent_0_4, [], compView_0);
        compView_0.create(this._HeaderControlComponent_0_4, this.projectableNodes, null);
        this.init([].concat([this._el_0]), [this._el_0], [], []);
        return this._appEl_0;
    };
    _View_HeaderControlComponent_Host0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import3.HeaderControlComponent) && (0 === requestNodeIndex))) {
            return this._HeaderControlComponent_0_4;
        }
        return notFoundResult;
    };
    _View_HeaderControlComponent_Host0.prototype.detectChangesInternal = function (throwOnChange) {
        if (((this.numberOfChecks === 0) && !throwOnChange)) {
            this._HeaderControlComponent_0_4.ngOnInit();
        }
        this.detectContentChildrenChanges(throwOnChange);
        this.detectViewChildrenChanges(throwOnChange);
    };
    return _View_HeaderControlComponent_Host0;
}(import1.AppView));
function viewFactory_HeaderControlComponent_Host0(viewUtils, parentInjector, declarationEl) {
    if ((renderType_HeaderControlComponent_Host === null)) {
        (renderType_HeaderControlComponent_Host = viewUtils.createRenderComponentType('', 0, import8.ViewEncapsulation.None, [], {}));
    }
    return new _View_HeaderControlComponent_Host0(viewUtils, parentInjector, declarationEl);
}
export var HeaderControlComponentNgFactory = new import9.ComponentFactory('dip-header-control', viewFactory_HeaderControlComponent_Host0, import3.HeaderControlComponent);
var styles_HeaderControlComponent = [];
var renderType_HeaderControlComponent = null;
var _View_HeaderControlComponent0 = (function (_super) {
    __extends(_View_HeaderControlComponent0, _super);
    function _View_HeaderControlComponent0(viewUtils, parentInjector, declarationEl) {
        _super.call(this, _View_HeaderControlComponent0, renderType_HeaderControlComponent, import6.ViewType.COMPONENT, viewUtils, parentInjector, declarationEl, import7.ChangeDetectorStatus.CheckAlways);
    }
    _View_HeaderControlComponent0.prototype.createInternal = function (rootSelector) {
        var parentRenderNode = this.renderer.createViewRoot(this.declarationAppElement.nativeElement);
        this._text_0 = this.renderer.createText(parentRenderNode, '\n', null);
        this._anchor_1 = this.renderer.createTemplateAnchor(parentRenderNode, null);
        this._appEl_1 = new import2.AppElement(1, null, this, this._anchor_1);
        this._TemplateRef_1_5 = new import11.TemplateRef_(this._appEl_1, viewFactory_HeaderControlComponent1);
        this._NgIf_1_6 = new import10.NgIf(this._appEl_1.vcRef, this._TemplateRef_1_5);
        this._expr_0 = import7.UNINITIALIZED;
        this.init([], [
            this._text_0,
            this._anchor_1
        ], [], []);
        return null;
    };
    _View_HeaderControlComponent0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import11.TemplateRef) && (1 === requestNodeIndex))) {
            return this._TemplateRef_1_5;
        }
        if (((token === import10.NgIf) && (1 === requestNodeIndex))) {
            return this._NgIf_1_6;
        }
        return notFoundResult;
    };
    _View_HeaderControlComponent0.prototype.detectChangesInternal = function (throwOnChange) {
        var currVal_0 = this.context.tmpHeader.showControl;
        if (import4.checkBinding(throwOnChange, this._expr_0, currVal_0)) {
            this._NgIf_1_6.ngIf = currVal_0;
            this._expr_0 = currVal_0;
        }
        this.detectContentChildrenChanges(throwOnChange);
        this.detectViewChildrenChanges(throwOnChange);
    };
    return _View_HeaderControlComponent0;
}(import1.AppView));
export function viewFactory_HeaderControlComponent0(viewUtils, parentInjector, declarationEl) {
    if ((renderType_HeaderControlComponent === null)) {
        (renderType_HeaderControlComponent = viewUtils.createRenderComponentType('', 0, import8.ViewEncapsulation.None, styles_HeaderControlComponent, {}));
    }
    return new _View_HeaderControlComponent0(viewUtils, parentInjector, declarationEl);
}
var _View_HeaderControlComponent1 = (function (_super) {
    __extends(_View_HeaderControlComponent1, _super);
    function _View_HeaderControlComponent1(viewUtils, parentInjector, declarationEl) {
        _super.call(this, _View_HeaderControlComponent1, renderType_HeaderControlComponent, import6.ViewType.EMBEDDED, viewUtils, parentInjector, declarationEl, import7.ChangeDetectorStatus.CheckAlways);
    }
    _View_HeaderControlComponent1.prototype.createInternal = function (rootSelector) {
        this._el_0 = this.renderer.createElement(null, 'div', null);
        this.renderer.setElementAttribute(this._el_0, 'class', 'draggable-directive');
        this._text_1 = this.renderer.createText(this._el_0, '\n    ', null);
        this._el_2 = this.renderer.createElement(this._el_0, 'div', null);
        this.renderer.setElementAttribute(this._el_2, 'class', 'card centered');
        this._text_3 = this.renderer.createText(this._el_2, '\n        ', null);
        this._el_4 = this.renderer.createElement(this._el_2, 'dip-control-header', null);
        this._appEl_4 = new import2.AppElement(4, 2, this, this._el_4);
        var compView_4 = import13.viewFactory_ControlHeaderComponent0(this.viewUtils, this.injector(4), this._appEl_4);
        this._ControlHeaderComponent_4_4 = new import12.ControlHeaderComponent();
        this._appEl_4.initComponent(this._ControlHeaderComponent_4_4, [], compView_4);
        compView_4.create(this._ControlHeaderComponent_4_4, [], null);
        this._text_5 = this.renderer.createText(this._el_2, '\n\n        ', null);
        this._anchor_6 = this.renderer.createTemplateAnchor(this._el_2, null);
        this._appEl_6 = new import2.AppElement(6, 2, this, this._anchor_6);
        this._TemplateRef_6_5 = new import11.TemplateRef_(this._appEl_6, viewFactory_HeaderControlComponent2);
        this._NgIf_6_6 = new import10.NgIf(this._appEl_6.vcRef, this._TemplateRef_6_5);
        this._text_7 = this.renderer.createText(this._el_2, '\n        ', null);
        this._anchor_8 = this.renderer.createTemplateAnchor(this._el_2, null);
        this._appEl_8 = new import2.AppElement(8, 2, this, this._anchor_8);
        this._TemplateRef_8_5 = new import11.TemplateRef_(this._appEl_8, viewFactory_HeaderControlComponent3);
        this._NgIf_8_6 = new import10.NgIf(this._appEl_8.vcRef, this._TemplateRef_8_5);
        this._text_9 = this.renderer.createText(this._el_2, '\n    ', null);
        this._text_10 = this.renderer.createText(this._el_0, '\n', null);
        this._expr_0 = import7.UNINITIALIZED;
        this._expr_1 = import7.UNINITIALIZED;
        this._expr_2 = import7.UNINITIALIZED;
        this.init([].concat([this._el_0]), [
            this._el_0,
            this._text_1,
            this._el_2,
            this._text_3,
            this._el_4,
            this._text_5,
            this._anchor_6,
            this._text_7,
            this._anchor_8,
            this._text_9,
            this._text_10
        ], [], []);
        return null;
    };
    _View_HeaderControlComponent1.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import12.ControlHeaderComponent) && (4 === requestNodeIndex))) {
            return this._ControlHeaderComponent_4_4;
        }
        if (((token === import11.TemplateRef) && (6 === requestNodeIndex))) {
            return this._TemplateRef_6_5;
        }
        if (((token === import10.NgIf) && (6 === requestNodeIndex))) {
            return this._NgIf_6_6;
        }
        if (((token === import11.TemplateRef) && (8 === requestNodeIndex))) {
            return this._TemplateRef_8_5;
        }
        if (((token === import10.NgIf) && (8 === requestNodeIndex))) {
            return this._NgIf_8_6;
        }
        return notFoundResult;
    };
    _View_HeaderControlComponent1.prototype.detectChangesInternal = function (throwOnChange) {
        var currVal_0 = this.parent.context.tmpHeader;
        if (import4.checkBinding(throwOnChange, this._expr_0, currVal_0)) {
            this._ControlHeaderComponent_4_4.control = currVal_0;
            this._expr_0 = currVal_0;
        }
        if (((this.numberOfChecks === 0) && !throwOnChange)) {
            this._ControlHeaderComponent_4_4.ngOnInit();
        }
        var currVal_1 = (this.parent.context.tmpHeader.selection == this.parent.context.controlViews.Edit);
        if (import4.checkBinding(throwOnChange, this._expr_1, currVal_1)) {
            this._NgIf_6_6.ngIf = currVal_1;
            this._expr_1 = currVal_1;
        }
        var currVal_2 = (this.parent.context.tmpHeader.selection == this.parent.context.controlViews.Style);
        if (import4.checkBinding(throwOnChange, this._expr_2, currVal_2)) {
            this._NgIf_8_6.ngIf = currVal_2;
            this._expr_2 = currVal_2;
        }
        this.detectContentChildrenChanges(throwOnChange);
        this.detectViewChildrenChanges(throwOnChange);
    };
    return _View_HeaderControlComponent1;
}(import1.AppView));
function viewFactory_HeaderControlComponent1(viewUtils, parentInjector, declarationEl) {
    return new _View_HeaderControlComponent1(viewUtils, parentInjector, declarationEl);
}
var _View_HeaderControlComponent2 = (function (_super) {
    __extends(_View_HeaderControlComponent2, _super);
    function _View_HeaderControlComponent2(viewUtils, parentInjector, declarationEl) {
        _super.call(this, _View_HeaderControlComponent2, renderType_HeaderControlComponent, import6.ViewType.EMBEDDED, viewUtils, parentInjector, declarationEl, import7.ChangeDetectorStatus.CheckAlways);
    }
    _View_HeaderControlComponent2.prototype.createInternal = function (rootSelector) {
        this._el_0 = this.renderer.createElement(null, 'div', null);
        this._text_1 = this.renderer.createText(this._el_0, '\n            ', null);
        this._el_2 = this.renderer.createElement(this._el_0, 'div', null);
        this.renderer.setElementAttribute(this._el_2, 'class', 'form-field clearfix');
        this._text_3 = this.renderer.createText(this._el_2, '\n                ', null);
        this._el_4 = this.renderer.createElement(this._el_2, 'div', null);
        this.renderer.setElementAttribute(this._el_4, 'class', 'input-field left');
        this._text_5 = this.renderer.createText(this._el_4, '\n                    ', null);
        this._el_6 = this.renderer.createElement(this._el_4, 'input', null);
        this.renderer.setElementAttribute(this._el_6, 'style', 'width: 300px;');
        this._DefaultValueAccessor_6_3 = new import14.DefaultValueAccessor(this.renderer, new import20.ElementRef(this._el_6));
        this._NG_VALUE_ACCESSOR_6_4 = [this._DefaultValueAccessor_6_3];
        this._NgModel_6_5 = new import15.NgModel(null, null, null, this._NG_VALUE_ACCESSOR_6_4);
        this._NgControl_6_6 = this._NgModel_6_5;
        this._NgControlStatus_6_7 = new import16.NgControlStatus(this._NgControl_6_6);
        this._text_7 = this.renderer.createText(this._el_4, '\n                    ', null);
        this._el_8 = this.renderer.createElement(this._el_4, 'label', null);
        this._text_9 = this.renderer.createText(this._el_8, 'Title', null);
        this._text_10 = this.renderer.createText(this._el_4, '\n                ', null);
        this._text_11 = this.renderer.createText(this._el_2, '\n                ', null);
        this._el_12 = this.renderer.createElement(this._el_2, 'div', null);
        this.renderer.setElementAttribute(this._el_12, 'class', 'left left20');
        this._text_13 = this.renderer.createText(this._el_12, '\n                    ', null);
        this._el_14 = this.renderer.createElement(this._el_12, 'div', null);
        this.renderer.setElementAttribute(this._el_14, 'class', 'form-label');
        this._text_15 = this.renderer.createText(this._el_14, '\n                        ', null);
        this._el_16 = this.renderer.createElement(this._el_14, 'label', null);
        this.renderer.setElementAttribute(this._el_16, 'for', 'TitleColor');
        this._text_17 = this.renderer.createText(this._el_16, 'Color', null);
        this._text_18 = this.renderer.createText(this._el_14, '\n                    ', null);
        this._text_19 = this.renderer.createText(this._el_12, '\n                    ', null);
        this._el_20 = this.renderer.createElement(this._el_12, 'input', null);
        this.renderer.setElementAttribute(this._el_20, 'class', 'colorpicker');
        this.renderer.setElementAttribute(this._el_20, 'id', 'TitleColor');
        this._appEl_20 = new import2.AppElement(20, 12, this, this._el_20);
        this._ColorPickerDirective_20_5 = new import17.ColorPickerDirective(this.parent.parentInjector.get(import21.Compiler), this._appEl_20.vcRef, new import20.ElementRef(this._el_20), this.parent.parentInjector.get(import22.ColorPickerService));
        this._text_21 = this.renderer.createText(this._el_12, '\n                ', null);
        this._text_22 = this.renderer.createText(this._el_2, '\n                ', null);
        this._el_23 = this.renderer.createElement(this._el_2, 'div', null);
        this.renderer.setElementAttribute(this._el_23, 'class', 'left left20');
        this._text_24 = this.renderer.createText(this._el_23, '\n                    ', null);
        this._el_25 = this.renderer.createElement(this._el_23, 'dip-combobox', null);
        this._appEl_25 = new import2.AppElement(25, 23, this, this._el_25);
        var compView_25 = import23.viewFactory_ComboboxComponent0(this.viewUtils, this.injector(25), this._appEl_25);
        this._ComboboxComponent_25_4 = new import18.ComboboxComponent();
        this._appEl_25.initComponent(this._ComboboxComponent_25_4, [], compView_25);
        compView_25.create(this._ComboboxComponent_25_4, [], null);
        this._text_26 = this.renderer.createText(this._el_23, '\n                ', null);
        this._text_27 = this.renderer.createText(this._el_2, '\n            ', null);
        this._text_28 = this.renderer.createText(this._el_0, '\n            ', null);
        this._el_29 = this.renderer.createElement(this._el_0, 'div', null);
        this.renderer.setElementAttribute(this._el_29, 'class', 'form-field');
        this._text_30 = this.renderer.createText(this._el_29, '\n                ', null);
        this._el_31 = this.renderer.createElement(this._el_29, 'div', null);
        this.renderer.setElementAttribute(this._el_31, 'class', 'form-label');
        this._text_32 = this.renderer.createText(this._el_31, '\n                    ', null);
        this._el_33 = this.renderer.createElement(this._el_31, 'label', null);
        this._text_34 = this.renderer.createText(this._el_33, 'Background image', null);
        this._text_35 = this.renderer.createText(this._el_31, '\n                ', null);
        this._text_36 = this.renderer.createText(this._el_29, '\n                ', null);
        this._el_37 = this.renderer.createElement(this._el_29, 'dip-uploader', null);
        this._appEl_37 = new import2.AppElement(37, 29, this, this._el_37);
        var compView_37 = import24.viewFactory_UploaderComponent0(this.viewUtils, this.injector(37), this._appEl_37);
        this._UploaderComponent_37_4 = new import19.UploaderComponent();
        this._appEl_37.initComponent(this._UploaderComponent_37_4, [], compView_37);
        compView_37.create(this._UploaderComponent_37_4, [], null);
        this._text_38 = this.renderer.createText(this._el_29, '\n            ', null);
        this._text_39 = this.renderer.createText(this._el_0, '\n        ', null);
        this._expr_3 = import7.UNINITIALIZED;
        var disposable_0 = this.renderer.listen(this._el_6, 'ngModelChange', this.eventHandler(this._handle_ngModelChange_6_0.bind(this)));
        var disposable_1 = this.renderer.listen(this._el_6, 'input', this.eventHandler(this._handle_input_6_1.bind(this)));
        var disposable_2 = this.renderer.listen(this._el_6, 'blur', this.eventHandler(this._handle_blur_6_2.bind(this)));
        this._expr_4 = import7.UNINITIALIZED;
        var subscription_0 = this._NgModel_6_5.update.subscribe(this.eventHandler(this._handle_ngModelChange_6_0.bind(this)));
        this._expr_5 = import7.UNINITIALIZED;
        this._expr_6 = import7.UNINITIALIZED;
        this._expr_7 = import7.UNINITIALIZED;
        this._expr_8 = import7.UNINITIALIZED;
        this._expr_9 = import7.UNINITIALIZED;
        this._expr_10 = import7.UNINITIALIZED;
        this._expr_14 = import7.UNINITIALIZED;
        var disposable_3 = this.renderer.listen(this._el_20, 'colorPickerChange', this.eventHandler(this._handle_colorPickerChange_20_0.bind(this)));
        var disposable_4 = this.renderer.listen(this._el_20, 'input', this.eventHandler(this._handle_input_20_1.bind(this)));
        var disposable_5 = this.renderer.listen(this._el_20, 'click', this.eventHandler(this._handle_click_20_2.bind(this)));
        this._expr_15 = import7.UNINITIALIZED;
        this._expr_16 = import7.UNINITIALIZED;
        this._expr_17 = import7.UNINITIALIZED;
        this._expr_18 = import7.UNINITIALIZED;
        this._expr_19 = import7.UNINITIALIZED;
        this._expr_20 = import7.UNINITIALIZED;
        var subscription_1 = this._ColorPickerDirective_20_5.colorPickerChange.subscribe(this.eventHandler(this._handle_colorPickerChange_20_0.bind(this)));
        var disposable_6 = this.renderer.listen(this._el_25, 'selected', this.eventHandler(this._handle_selected_25_0.bind(this)));
        this._expr_22 = import7.UNINITIALIZED;
        this._expr_23 = import7.UNINITIALIZED;
        this._map_0 = import4.pureProxy1(function (p0) {
            return { width: p0 };
        });
        this._expr_24 = import7.UNINITIALIZED;
        this._expr_25 = import7.UNINITIALIZED;
        var subscription_2 = this._ComboboxComponent_25_4.selected.subscribe(this.eventHandler(this._handle_selected_25_0.bind(this)));
        var disposable_7 = this.renderer.listen(this._el_37, 'uploadedFile', this.eventHandler(this._handle_uploadedFile_37_0.bind(this)));
        this._expr_27 = import7.UNINITIALIZED;
        var subscription_3 = this._UploaderComponent_37_4.uploadedFile.subscribe(this.eventHandler(this._handle_uploadedFile_37_0.bind(this)));
        this.init([].concat([this._el_0]), [
            this._el_0,
            this._text_1,
            this._el_2,
            this._text_3,
            this._el_4,
            this._text_5,
            this._el_6,
            this._text_7,
            this._el_8,
            this._text_9,
            this._text_10,
            this._text_11,
            this._el_12,
            this._text_13,
            this._el_14,
            this._text_15,
            this._el_16,
            this._text_17,
            this._text_18,
            this._text_19,
            this._el_20,
            this._text_21,
            this._text_22,
            this._el_23,
            this._text_24,
            this._el_25,
            this._text_26,
            this._text_27,
            this._text_28,
            this._el_29,
            this._text_30,
            this._el_31,
            this._text_32,
            this._el_33,
            this._text_34,
            this._text_35,
            this._text_36,
            this._el_37,
            this._text_38,
            this._text_39
        ], [
            disposable_0,
            disposable_1,
            disposable_2,
            disposable_3,
            disposable_4,
            disposable_5,
            disposable_6,
            disposable_7
        ], [
            subscription_0,
            subscription_1,
            subscription_2,
            subscription_3
        ]);
        return null;
    };
    _View_HeaderControlComponent2.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import14.DefaultValueAccessor) && (6 === requestNodeIndex))) {
            return this._DefaultValueAccessor_6_3;
        }
        if (((token === import25.NG_VALUE_ACCESSOR) && (6 === requestNodeIndex))) {
            return this._NG_VALUE_ACCESSOR_6_4;
        }
        if (((token === import15.NgModel) && (6 === requestNodeIndex))) {
            return this._NgModel_6_5;
        }
        if (((token === import26.NgControl) && (6 === requestNodeIndex))) {
            return this._NgControl_6_6;
        }
        if (((token === import16.NgControlStatus) && (6 === requestNodeIndex))) {
            return this._NgControlStatus_6_7;
        }
        if (((token === import17.ColorPickerDirective) && (20 === requestNodeIndex))) {
            return this._ColorPickerDirective_20_5;
        }
        if (((token === import18.ComboboxComponent) && (25 === requestNodeIndex))) {
            return this._ComboboxComponent_25_4;
        }
        if (((token === import19.UploaderComponent) && (37 === requestNodeIndex))) {
            return this._UploaderComponent_37_4;
        }
        return notFoundResult;
    };
    _View_HeaderControlComponent2.prototype.detectChangesInternal = function (throwOnChange) {
        var changes = null;
        changes = null;
        var currVal_4 = this.parent.parent.context.header.title;
        if (import4.checkBinding(throwOnChange, this._expr_4, currVal_4)) {
            this._NgModel_6_5.model = currVal_4;
            if ((changes === null)) {
                (changes = {});
            }
            changes['model'] = new import7.SimpleChange(this._expr_4, currVal_4);
            this._expr_4 = currVal_4;
        }
        if ((changes !== null)) {
            this._NgModel_6_5.ngOnChanges(changes);
        }
        changes = null;
        var currVal_15 = this.parent.parent.context.header.title_color;
        if (import4.checkBinding(throwOnChange, this._expr_15, currVal_15)) {
            this._ColorPickerDirective_20_5.colorPicker = currVal_15;
            if ((changes === null)) {
                (changes = {});
            }
            changes['colorPicker'] = new import7.SimpleChange(this._expr_15, currVal_15);
            this._expr_15 = currVal_15;
        }
        var currVal_16 = 'bottom';
        if (import4.checkBinding(throwOnChange, this._expr_16, currVal_16)) {
            this._ColorPickerDirective_20_5.cpPosition = currVal_16;
            if ((changes === null)) {
                (changes = {});
            }
            changes['cpPosition'] = new import7.SimpleChange(this._expr_16, currVal_16);
            this._expr_16 = currVal_16;
        }
        var currVal_17 = true;
        if (import4.checkBinding(throwOnChange, this._expr_17, currVal_17)) {
            this._ColorPickerDirective_20_5.cpCancelButton = currVal_17;
            if ((changes === null)) {
                (changes = {});
            }
            changes['cpCancelButton'] = new import7.SimpleChange(this._expr_17, currVal_17);
            this._expr_17 = currVal_17;
        }
        var currVal_18 = 'colorpicker-button button';
        if (import4.checkBinding(throwOnChange, this._expr_18, currVal_18)) {
            this._ColorPickerDirective_20_5.cpCancelButtonClass = currVal_18;
            if ((changes === null)) {
                (changes = {});
            }
            changes['cpCancelButtonClass'] = new import7.SimpleChange(this._expr_18, currVal_18);
            this._expr_18 = currVal_18;
        }
        var currVal_19 = true;
        if (import4.checkBinding(throwOnChange, this._expr_19, currVal_19)) {
            this._ColorPickerDirective_20_5.cpOKButton = currVal_19;
            if ((changes === null)) {
                (changes = {});
            }
            changes['cpOKButton'] = new import7.SimpleChange(this._expr_19, currVal_19);
            this._expr_19 = currVal_19;
        }
        var currVal_20 = 'colorpicker-button button right10';
        if (import4.checkBinding(throwOnChange, this._expr_20, currVal_20)) {
            this._ColorPickerDirective_20_5.cpOKButtonClass = currVal_20;
            if ((changes === null)) {
                (changes = {});
            }
            changes['cpOKButtonClass'] = new import7.SimpleChange(this._expr_20, currVal_20);
            this._expr_20 = currVal_20;
        }
        if ((changes !== null)) {
            this._ColorPickerDirective_20_5.ngOnChanges(changes);
        }
        if (((this.numberOfChecks === 0) && !throwOnChange)) {
            this._ColorPickerDirective_20_5.ngOnInit();
        }
        var currVal_22 = this.parent.parent.context.font_sizes;
        if (import4.checkBinding(throwOnChange, this._expr_22, currVal_22)) {
            this._ComboboxComponent_25_4.items = currVal_22;
            this._expr_22 = currVal_22;
        }
        var currVal_23 = this.parent.parent.context.header.font_size;
        if (import4.checkBinding(throwOnChange, this._expr_23, currVal_23)) {
            this._ComboboxComponent_25_4.selectedItem = currVal_23;
            this._expr_23 = currVal_23;
        }
        var currVal_24 = this._map_0('200px');
        if (import4.checkBinding(throwOnChange, this._expr_24, currVal_24)) {
            this._ComboboxComponent_25_4.cbStyle = currVal_24;
            this._expr_24 = currVal_24;
        }
        var currVal_25 = 'Font size';
        if (import4.checkBinding(throwOnChange, this._expr_25, currVal_25)) {
            this._ComboboxComponent_25_4.label = currVal_25;
            this._expr_25 = currVal_25;
        }
        if (((this.numberOfChecks === 0) && !throwOnChange)) {
            this._ComboboxComponent_25_4.ngOnInit();
        }
        var currVal_27 = this.parent.parent.context.header.logo;
        if (import4.checkBinding(throwOnChange, this._expr_27, currVal_27)) {
            this._UploaderComponent_37_4.inputFile = currVal_27;
            this._expr_27 = currVal_27;
        }
        if (((this.numberOfChecks === 0) && !throwOnChange)) {
            this._UploaderComponent_37_4.ngOnInit();
        }
        this.detectContentChildrenChanges(throwOnChange);
        var currVal_3 = this.parent.parent.context.header.title;
        if (import4.checkBinding(throwOnChange, this._expr_3, currVal_3)) {
            this.renderer.setElementClass(this._el_6, 'active', currVal_3);
            this._expr_3 = currVal_3;
        }
        var currVal_5 = this._NgControlStatus_6_7.ngClassUntouched;
        if (import4.checkBinding(throwOnChange, this._expr_5, currVal_5)) {
            this.renderer.setElementClass(this._el_6, 'ng-untouched', currVal_5);
            this._expr_5 = currVal_5;
        }
        var currVal_6 = this._NgControlStatus_6_7.ngClassTouched;
        if (import4.checkBinding(throwOnChange, this._expr_6, currVal_6)) {
            this.renderer.setElementClass(this._el_6, 'ng-touched', currVal_6);
            this._expr_6 = currVal_6;
        }
        var currVal_7 = this._NgControlStatus_6_7.ngClassPristine;
        if (import4.checkBinding(throwOnChange, this._expr_7, currVal_7)) {
            this.renderer.setElementClass(this._el_6, 'ng-pristine', currVal_7);
            this._expr_7 = currVal_7;
        }
        var currVal_8 = this._NgControlStatus_6_7.ngClassDirty;
        if (import4.checkBinding(throwOnChange, this._expr_8, currVal_8)) {
            this.renderer.setElementClass(this._el_6, 'ng-dirty', currVal_8);
            this._expr_8 = currVal_8;
        }
        var currVal_9 = this._NgControlStatus_6_7.ngClassValid;
        if (import4.checkBinding(throwOnChange, this._expr_9, currVal_9)) {
            this.renderer.setElementClass(this._el_6, 'ng-valid', currVal_9);
            this._expr_9 = currVal_9;
        }
        var currVal_10 = this._NgControlStatus_6_7.ngClassInvalid;
        if (import4.checkBinding(throwOnChange, this._expr_10, currVal_10)) {
            this.renderer.setElementClass(this._el_6, 'ng-invalid', currVal_10);
            this._expr_10 = currVal_10;
        }
        var currVal_14 = this.parent.parent.context.header.title_color;
        if (import4.checkBinding(throwOnChange, this._expr_14, currVal_14)) {
            this.renderer.setElementStyle(this._el_20, 'background', ((this.viewUtils.sanitizer.sanitize(import27.SecurityContext.STYLE, currVal_14) == null) ? null : this.viewUtils.sanitizer.sanitize(import27.SecurityContext.STYLE, currVal_14).toString()));
            this._expr_14 = currVal_14;
        }
        this.detectViewChildrenChanges(throwOnChange);
    };
    _View_HeaderControlComponent2.prototype.destroyInternal = function () {
        this._NgModel_6_5.ngOnDestroy();
    };
    _View_HeaderControlComponent2.prototype._handle_ngModelChange_6_0 = function ($event) {
        this.markPathToRootAsCheckOnce();
        var pd_0 = ((this.parent.parent.context.header.title = $event) !== false);
        return (true && pd_0);
    };
    _View_HeaderControlComponent2.prototype._handle_input_6_1 = function ($event) {
        this.markPathToRootAsCheckOnce();
        var pd_0 = (this._DefaultValueAccessor_6_3.onChange($event.target.value) !== false);
        return (true && pd_0);
    };
    _View_HeaderControlComponent2.prototype._handle_blur_6_2 = function ($event) {
        this.markPathToRootAsCheckOnce();
        var pd_0 = (this._DefaultValueAccessor_6_3.onTouched() !== false);
        return (true && pd_0);
    };
    _View_HeaderControlComponent2.prototype._handle_colorPickerChange_20_0 = function ($event) {
        this.markPathToRootAsCheckOnce();
        var pd_0 = ((this.parent.parent.context.header.title_color = $event) !== false);
        return (true && pd_0);
    };
    _View_HeaderControlComponent2.prototype._handle_input_20_1 = function ($event) {
        this.markPathToRootAsCheckOnce();
        var pd_0 = (this._ColorPickerDirective_20_5.changeInput($event.target.value) !== false);
        return (true && pd_0);
    };
    _View_HeaderControlComponent2.prototype._handle_click_20_2 = function ($event) {
        this.markPathToRootAsCheckOnce();
        var pd_0 = (this._ColorPickerDirective_20_5.onClick() !== false);
        return (true && pd_0);
    };
    _View_HeaderControlComponent2.prototype._handle_selected_25_0 = function ($event) {
        this.markPathToRootAsCheckOnce();
        var pd_0 = ((this.parent.parent.context.header.font_size = $event) !== false);
        return (true && pd_0);
    };
    _View_HeaderControlComponent2.prototype._handle_uploadedFile_37_0 = function ($event) {
        this.markPathToRootAsCheckOnce();
        var pd_0 = (this.parent.parent.context.onFileUploaded($event) !== false);
        return (true && pd_0);
    };
    return _View_HeaderControlComponent2;
}(import1.AppView));
function viewFactory_HeaderControlComponent2(viewUtils, parentInjector, declarationEl) {
    return new _View_HeaderControlComponent2(viewUtils, parentInjector, declarationEl);
}
var _View_HeaderControlComponent3 = (function (_super) {
    __extends(_View_HeaderControlComponent3, _super);
    function _View_HeaderControlComponent3(viewUtils, parentInjector, declarationEl) {
        _super.call(this, _View_HeaderControlComponent3, renderType_HeaderControlComponent, import6.ViewType.EMBEDDED, viewUtils, parentInjector, declarationEl, import7.ChangeDetectorStatus.CheckAlways);
    }
    _View_HeaderControlComponent3.prototype.createInternal = function (rootSelector) {
        this._el_0 = this.renderer.createElement(null, 'div', null);
        this._text_1 = this.renderer.createText(this._el_0, '\n            ', null);
        this._el_2 = this.renderer.createElement(this._el_0, 'dip-header-style', null);
        this._appEl_2 = new import2.AppElement(2, 0, this, this._el_2);
        var compView_2 = import29.viewFactory_HeaderStyleComponent0(this.viewUtils, this.injector(2), this._appEl_2);
        this._HeaderStyleComponent_2_4 = new import28.HeaderStyleComponent();
        this._appEl_2.initComponent(this._HeaderStyleComponent_2_4, [], compView_2);
        compView_2.create(this._HeaderStyleComponent_2_4, [], null);
        this._text_3 = this.renderer.createText(this._el_0, '\n        ', null);
        this._expr_0 = import7.UNINITIALIZED;
        this.init([].concat([this._el_0]), [
            this._el_0,
            this._text_1,
            this._el_2,
            this._text_3
        ], [], []);
        return null;
    };
    _View_HeaderControlComponent3.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import28.HeaderStyleComponent) && (2 === requestNodeIndex))) {
            return this._HeaderStyleComponent_2_4;
        }
        return notFoundResult;
    };
    _View_HeaderControlComponent3.prototype.detectChangesInternal = function (throwOnChange) {
        var currVal_0 = this.parent.parent.context.header;
        if (import4.checkBinding(throwOnChange, this._expr_0, currVal_0)) {
            this._HeaderStyleComponent_2_4.header = currVal_0;
            this._expr_0 = currVal_0;
        }
        if (((this.numberOfChecks === 0) && !throwOnChange)) {
            this._HeaderStyleComponent_2_4.ngOnInit();
        }
        this.detectContentChildrenChanges(throwOnChange);
        this.detectViewChildrenChanges(throwOnChange);
    };
    return _View_HeaderControlComponent3;
}(import1.AppView));
function viewFactory_HeaderControlComponent3(viewUtils, parentInjector, declarationEl) {
    return new _View_HeaderControlComponent3(viewUtils, parentInjector, declarationEl);
}
