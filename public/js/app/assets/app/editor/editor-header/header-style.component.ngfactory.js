/**
 * This file is generated by the Angular 2 template compiler.
 * Do not edit.
 */
/* tslint:disable */
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
import * as import1 from '@angular/core/src/linker/view';
import * as import2 from '@angular/core/src/linker/element';
import * as import3 from './header-style.component';
import * as import4 from '@angular/core/src/linker/view_utils';
import * as import6 from '@angular/core/src/linker/view_type';
import * as import7 from '@angular/core/src/change_detection/change_detection';
import * as import8 from '@angular/core/src/metadata/view';
import * as import9 from '@angular/core/src/linker/component_factory';
import * as import10 from '@angular/forms/src/directives/checkbox_value_accessor';
import * as import11 from '@angular/forms/src/directives/ng_model';
import * as import12 from '@angular/forms/src/directives/ng_control_status';
import * as import13 from '@angular/common/src/directives/ng_if';
import * as import14 from '@angular/core/src/linker/element_ref';
import * as import15 from '@angular/core/src/linker/template_ref';
import * as import16 from '@angular/forms/src/directives/control_value_accessor';
import * as import17 from '@angular/forms/src/directives/ng_control';
import * as import18 from 'angular2-color-picker/lib/color-picker.directive';
import * as import19 from '@angular/forms/src/directives/default_value_accessor';
import * as import20 from '@angular/core/src/linker/compiler';
import * as import21 from 'angular2-color-picker/lib/color-picker.service';
import * as import22 from '@angular/core/src/security';
var renderType_HeaderStyleComponent_Host = null;
var _View_HeaderStyleComponent_Host0 = (function (_super) {
    __extends(_View_HeaderStyleComponent_Host0, _super);
    function _View_HeaderStyleComponent_Host0(viewUtils, parentInjector, declarationEl) {
        _super.call(this, _View_HeaderStyleComponent_Host0, renderType_HeaderStyleComponent_Host, import6.ViewType.HOST, viewUtils, parentInjector, declarationEl, import7.ChangeDetectorStatus.CheckAlways);
    }
    _View_HeaderStyleComponent_Host0.prototype.createInternal = function (rootSelector) {
        this._el_0 = this.selectOrCreateHostElement('dip-header-style', rootSelector, null);
        this._appEl_0 = new import2.AppElement(0, null, this, this._el_0);
        var compView_0 = viewFactory_HeaderStyleComponent0(this.viewUtils, this.injector(0), this._appEl_0);
        this._HeaderStyleComponent_0_4 = new import3.HeaderStyleComponent();
        this._appEl_0.initComponent(this._HeaderStyleComponent_0_4, [], compView_0);
        compView_0.create(this._HeaderStyleComponent_0_4, this.projectableNodes, null);
        this.init([].concat([this._el_0]), [this._el_0], [], []);
        return this._appEl_0;
    };
    _View_HeaderStyleComponent_Host0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import3.HeaderStyleComponent) && (0 === requestNodeIndex))) {
            return this._HeaderStyleComponent_0_4;
        }
        return notFoundResult;
    };
    _View_HeaderStyleComponent_Host0.prototype.detectChangesInternal = function (throwOnChange) {
        if (((this.numberOfChecks === 0) && !throwOnChange)) {
            this._HeaderStyleComponent_0_4.ngOnInit();
        }
        this.detectContentChildrenChanges(throwOnChange);
        this.detectViewChildrenChanges(throwOnChange);
    };
    return _View_HeaderStyleComponent_Host0;
}(import1.AppView));
function viewFactory_HeaderStyleComponent_Host0(viewUtils, parentInjector, declarationEl) {
    if ((renderType_HeaderStyleComponent_Host === null)) {
        (renderType_HeaderStyleComponent_Host = viewUtils.createRenderComponentType('', 0, import8.ViewEncapsulation.None, [], {}));
    }
    return new _View_HeaderStyleComponent_Host0(viewUtils, parentInjector, declarationEl);
}
export var HeaderStyleComponentNgFactory = new import9.ComponentFactory('dip-header-style', viewFactory_HeaderStyleComponent_Host0, import3.HeaderStyleComponent);
var styles_HeaderStyleComponent = [];
var renderType_HeaderStyleComponent = null;
var _View_HeaderStyleComponent0 = (function (_super) {
    __extends(_View_HeaderStyleComponent0, _super);
    function _View_HeaderStyleComponent0(viewUtils, parentInjector, declarationEl) {
        _super.call(this, _View_HeaderStyleComponent0, renderType_HeaderStyleComponent, import6.ViewType.COMPONENT, viewUtils, parentInjector, declarationEl, import7.ChangeDetectorStatus.CheckAlways);
    }
    _View_HeaderStyleComponent0.prototype.createInternal = function (rootSelector) {
        var parentRenderNode = this.renderer.createViewRoot(this.declarationAppElement.nativeElement);
        this._el_0 = this.renderer.createElement(parentRenderNode, 'div', null);
        this.renderer.setElementAttribute(this._el_0, 'class', 'form-field');
        this._text_1 = this.renderer.createText(this._el_0, '\n    ', null);
        this._el_2 = this.renderer.createElement(this._el_0, 'div', null);
        this.renderer.setElementAttribute(this._el_2, 'class', 'form-label');
        this._text_3 = this.renderer.createText(this._el_2, '\n        ', null);
        this._el_4 = this.renderer.createElement(this._el_2, 'label', null);
        this.renderer.setElementAttribute(this._el_4, 'for', 'display');
        this._text_5 = this.renderer.createText(this._el_4, 'Display', null);
        this._text_6 = this.renderer.createText(this._el_2, '\n    ', null);
        this._text_7 = this.renderer.createText(this._el_0, '\n    ', null);
        this._el_8 = this.renderer.createElement(this._el_0, 'div', null);
        this.renderer.setElementAttribute(this._el_8, 'class', 'checkbox-wrapper');
        this._text_9 = this.renderer.createText(this._el_8, '\n        ', null);
        this._el_10 = this.renderer.createElement(this._el_8, 'input', null);
        this.renderer.setElementAttribute(this._el_10, 'id', 'display');
        this.renderer.setElementAttribute(this._el_10, 'type', 'checkbox');
        this._CheckboxControlValueAccessor_10_3 = new import10.CheckboxControlValueAccessor(this.renderer, new import14.ElementRef(this._el_10));
        this._NG_VALUE_ACCESSOR_10_4 = [this._CheckboxControlValueAccessor_10_3];
        this._NgModel_10_5 = new import11.NgModel(null, null, null, this._NG_VALUE_ACCESSOR_10_4);
        this._NgControl_10_6 = this._NgModel_10_5;
        this._NgControlStatus_10_7 = new import12.NgControlStatus(this._NgControl_10_6);
        this._text_11 = this.renderer.createText(this._el_8, '\n\n        ', null);
        this._el_12 = this.renderer.createElement(this._el_8, 'label', null);
        this.renderer.setElementAttribute(this._el_12, 'for', 'display');
        this._text_13 = this.renderer.createText(this._el_8, '\n    ', null);
        this._text_14 = this.renderer.createText(this._el_0, '\n', null);
        this._text_15 = this.renderer.createText(parentRenderNode, '\n\n', null);
        this._anchor_16 = this.renderer.createTemplateAnchor(parentRenderNode, null);
        this._appEl_16 = new import2.AppElement(16, null, this, this._anchor_16);
        this._TemplateRef_16_5 = new import15.TemplateRef_(this._appEl_16, viewFactory_HeaderStyleComponent1);
        this._NgIf_16_6 = new import13.NgIf(this._appEl_16.vcRef, this._TemplateRef_16_5);
        this._expr_3 = import7.UNINITIALIZED;
        var disposable_0 = this.renderer.listen(this._el_10, 'ngModelChange', this.eventHandler(this._handle_ngModelChange_10_0.bind(this)));
        var disposable_1 = this.renderer.listen(this._el_10, 'change', this.eventHandler(this._handle_change_10_1.bind(this)));
        var disposable_2 = this.renderer.listen(this._el_10, 'blur', this.eventHandler(this._handle_blur_10_2.bind(this)));
        this._expr_4 = import7.UNINITIALIZED;
        var subscription_0 = this._NgModel_10_5.update.subscribe(this.eventHandler(this._handle_ngModelChange_10_0.bind(this)));
        this._expr_5 = import7.UNINITIALIZED;
        this._expr_6 = import7.UNINITIALIZED;
        this._expr_7 = import7.UNINITIALIZED;
        this._expr_8 = import7.UNINITIALIZED;
        this._expr_9 = import7.UNINITIALIZED;
        this._expr_10 = import7.UNINITIALIZED;
        this._expr_11 = import7.UNINITIALIZED;
        this.init([], [
            this._el_0,
            this._text_1,
            this._el_2,
            this._text_3,
            this._el_4,
            this._text_5,
            this._text_6,
            this._text_7,
            this._el_8,
            this._text_9,
            this._el_10,
            this._text_11,
            this._el_12,
            this._text_13,
            this._text_14,
            this._text_15,
            this._anchor_16
        ], [
            disposable_0,
            disposable_1,
            disposable_2
        ], [subscription_0]);
        return null;
    };
    _View_HeaderStyleComponent0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import10.CheckboxControlValueAccessor) && (10 === requestNodeIndex))) {
            return this._CheckboxControlValueAccessor_10_3;
        }
        if (((token === import16.NG_VALUE_ACCESSOR) && (10 === requestNodeIndex))) {
            return this._NG_VALUE_ACCESSOR_10_4;
        }
        if (((token === import11.NgModel) && (10 === requestNodeIndex))) {
            return this._NgModel_10_5;
        }
        if (((token === import17.NgControl) && (10 === requestNodeIndex))) {
            return this._NgControl_10_6;
        }
        if (((token === import12.NgControlStatus) && (10 === requestNodeIndex))) {
            return this._NgControlStatus_10_7;
        }
        if (((token === import15.TemplateRef) && (16 === requestNodeIndex))) {
            return this._TemplateRef_16_5;
        }
        if (((token === import13.NgIf) && (16 === requestNodeIndex))) {
            return this._NgIf_16_6;
        }
        return notFoundResult;
    };
    _View_HeaderStyleComponent0.prototype.detectChangesInternal = function (throwOnChange) {
        var changes = null;
        changes = null;
        var currVal_4 = this.context.header.display;
        if (import4.checkBinding(throwOnChange, this._expr_4, currVal_4)) {
            this._NgModel_10_5.model = currVal_4;
            if ((changes === null)) {
                (changes = {});
            }
            changes['model'] = new import7.SimpleChange(this._expr_4, currVal_4);
            this._expr_4 = currVal_4;
        }
        if ((changes !== null)) {
            this._NgModel_10_5.ngOnChanges(changes);
        }
        var currVal_11 = this.context.header.display;
        if (import4.checkBinding(throwOnChange, this._expr_11, currVal_11)) {
            this._NgIf_16_6.ngIf = currVal_11;
            this._expr_11 = currVal_11;
        }
        this.detectContentChildrenChanges(throwOnChange);
        var currVal_3 = this.context.header.display;
        if (import4.checkBinding(throwOnChange, this._expr_3, currVal_3)) {
            this.renderer.setElementProperty(this._el_10, 'checked', currVal_3);
            this._expr_3 = currVal_3;
        }
        var currVal_5 = this._NgControlStatus_10_7.ngClassUntouched;
        if (import4.checkBinding(throwOnChange, this._expr_5, currVal_5)) {
            this.renderer.setElementClass(this._el_10, 'ng-untouched', currVal_5);
            this._expr_5 = currVal_5;
        }
        var currVal_6 = this._NgControlStatus_10_7.ngClassTouched;
        if (import4.checkBinding(throwOnChange, this._expr_6, currVal_6)) {
            this.renderer.setElementClass(this._el_10, 'ng-touched', currVal_6);
            this._expr_6 = currVal_6;
        }
        var currVal_7 = this._NgControlStatus_10_7.ngClassPristine;
        if (import4.checkBinding(throwOnChange, this._expr_7, currVal_7)) {
            this.renderer.setElementClass(this._el_10, 'ng-pristine', currVal_7);
            this._expr_7 = currVal_7;
        }
        var currVal_8 = this._NgControlStatus_10_7.ngClassDirty;
        if (import4.checkBinding(throwOnChange, this._expr_8, currVal_8)) {
            this.renderer.setElementClass(this._el_10, 'ng-dirty', currVal_8);
            this._expr_8 = currVal_8;
        }
        var currVal_9 = this._NgControlStatus_10_7.ngClassValid;
        if (import4.checkBinding(throwOnChange, this._expr_9, currVal_9)) {
            this.renderer.setElementClass(this._el_10, 'ng-valid', currVal_9);
            this._expr_9 = currVal_9;
        }
        var currVal_10 = this._NgControlStatus_10_7.ngClassInvalid;
        if (import4.checkBinding(throwOnChange, this._expr_10, currVal_10)) {
            this.renderer.setElementClass(this._el_10, 'ng-invalid', currVal_10);
            this._expr_10 = currVal_10;
        }
        this.detectViewChildrenChanges(throwOnChange);
    };
    _View_HeaderStyleComponent0.prototype.destroyInternal = function () {
        this._NgModel_10_5.ngOnDestroy();
    };
    _View_HeaderStyleComponent0.prototype._handle_ngModelChange_10_0 = function ($event) {
        this.markPathToRootAsCheckOnce();
        var pd_0 = ((this.context.header.display = $event) !== false);
        return (true && pd_0);
    };
    _View_HeaderStyleComponent0.prototype._handle_change_10_1 = function ($event) {
        this.markPathToRootAsCheckOnce();
        var pd_0 = (this._CheckboxControlValueAccessor_10_3.onChange($event.target.checked) !== false);
        return (true && pd_0);
    };
    _View_HeaderStyleComponent0.prototype._handle_blur_10_2 = function ($event) {
        this.markPathToRootAsCheckOnce();
        var pd_0 = (this._CheckboxControlValueAccessor_10_3.onTouched() !== false);
        return (true && pd_0);
    };
    return _View_HeaderStyleComponent0;
}(import1.AppView));
export function viewFactory_HeaderStyleComponent0(viewUtils, parentInjector, declarationEl) {
    if ((renderType_HeaderStyleComponent === null)) {
        (renderType_HeaderStyleComponent = viewUtils.createRenderComponentType('', 0, import8.ViewEncapsulation.None, styles_HeaderStyleComponent, {}));
    }
    return new _View_HeaderStyleComponent0(viewUtils, parentInjector, declarationEl);
}
var _View_HeaderStyleComponent1 = (function (_super) {
    __extends(_View_HeaderStyleComponent1, _super);
    function _View_HeaderStyleComponent1(viewUtils, parentInjector, declarationEl) {
        _super.call(this, _View_HeaderStyleComponent1, renderType_HeaderStyleComponent, import6.ViewType.EMBEDDED, viewUtils, parentInjector, declarationEl, import7.ChangeDetectorStatus.CheckAlways);
    }
    _View_HeaderStyleComponent1.prototype.createInternal = function (rootSelector) {
        this._el_0 = this.renderer.createElement(null, 'div', null);
        this.renderer.setElementAttribute(this._el_0, 'class', 'form-field clearfix');
        this._text_1 = this.renderer.createText(this._el_0, '\n    ', null);
        this._el_2 = this.renderer.createElement(this._el_0, 'div', null);
        this.renderer.setElementAttribute(this._el_2, 'class', 'left');
        this._text_3 = this.renderer.createText(this._el_2, '\n        ', null);
        this._el_4 = this.renderer.createElement(this._el_2, 'div', null);
        this.renderer.setElementAttribute(this._el_4, 'class', 'form-label');
        this._text_5 = this.renderer.createText(this._el_4, '\n            ', null);
        this._el_6 = this.renderer.createElement(this._el_4, 'label', null);
        this.renderer.setElementAttribute(this._el_6, 'for', 'Background');
        this._text_7 = this.renderer.createText(this._el_6, 'Background', null);
        this._text_8 = this.renderer.createText(this._el_4, '\n        ', null);
        this._text_9 = this.renderer.createText(this._el_2, '\n        ', null);
        this._el_10 = this.renderer.createElement(this._el_2, 'input', null);
        this.renderer.setElementAttribute(this._el_10, 'class', 'colorpicker');
        this.renderer.setElementAttribute(this._el_10, 'id', 'Background');
        this._appEl_10 = new import2.AppElement(10, 2, this, this._el_10);
        this._ColorPickerDirective_10_5 = new import18.ColorPickerDirective(this.parentInjector.get(import20.Compiler), this._appEl_10.vcRef, new import14.ElementRef(this._el_10), this.parentInjector.get(import21.ColorPickerService));
        this._text_11 = this.renderer.createText(this._el_2, '\n    ', null);
        this._text_12 = this.renderer.createText(this._el_0, '\n    ', null);
        this._el_13 = this.renderer.createElement(this._el_0, 'div', null);
        this.renderer.setElementAttribute(this._el_13, 'class', 'input-field left left20');
        this._text_14 = this.renderer.createText(this._el_13, '\n        ', null);
        this._el_15 = this.renderer.createElement(this._el_13, 'input', null);
        this.renderer.setElementAttribute(this._el_15, 'style', 'width: 100px;');
        this._DefaultValueAccessor_15_3 = new import19.DefaultValueAccessor(this.renderer, new import14.ElementRef(this._el_15));
        this._NG_VALUE_ACCESSOR_15_4 = [this._DefaultValueAccessor_15_3];
        this._NgModel_15_5 = new import11.NgModel(null, null, null, this._NG_VALUE_ACCESSOR_15_4);
        this._NgControl_15_6 = this._NgModel_15_5;
        this._NgControlStatus_15_7 = new import12.NgControlStatus(this._NgControl_15_6);
        this._text_16 = this.renderer.createText(this._el_13, '\n        ', null);
        this._el_17 = this.renderer.createElement(this._el_13, 'label', null);
        this._text_18 = this.renderer.createText(this._el_17, 'Height', null);
        this._text_19 = this.renderer.createText(this._el_13, '\n    ', null);
        this._text_20 = this.renderer.createText(this._el_0, '\n    ', null);
        this._el_21 = this.renderer.createElement(this._el_0, 'div', null);
        this.renderer.setElementAttribute(this._el_21, 'class', 'input-field left left20');
        this._text_22 = this.renderer.createText(this._el_21, '\n        ', null);
        this._el_23 = this.renderer.createElement(this._el_21, 'input', null);
        this.renderer.setElementAttribute(this._el_23, 'style', 'width: 100px;');
        this._DefaultValueAccessor_23_3 = new import19.DefaultValueAccessor(this.renderer, new import14.ElementRef(this._el_23));
        this._NG_VALUE_ACCESSOR_23_4 = [this._DefaultValueAccessor_23_3];
        this._NgModel_23_5 = new import11.NgModel(null, null, null, this._NG_VALUE_ACCESSOR_23_4);
        this._NgControl_23_6 = this._NgModel_23_5;
        this._NgControlStatus_23_7 = new import12.NgControlStatus(this._NgControl_23_6);
        this._text_24 = this.renderer.createText(this._el_21, '\n        ', null);
        this._el_25 = this.renderer.createElement(this._el_21, 'label', null);
        this._text_26 = this.renderer.createText(this._el_25, 'Padding top', null);
        this._text_27 = this.renderer.createText(this._el_21, '\n    ', null);
        this._text_28 = this.renderer.createText(this._el_0, '\n', null);
        this._expr_3 = import7.UNINITIALIZED;
        var disposable_0 = this.renderer.listen(this._el_10, 'colorPickerChange', this.eventHandler(this._handle_colorPickerChange_10_0.bind(this)));
        var disposable_1 = this.renderer.listen(this._el_10, 'input', this.eventHandler(this._handle_input_10_1.bind(this)));
        var disposable_2 = this.renderer.listen(this._el_10, 'click', this.eventHandler(this._handle_click_10_2.bind(this)));
        this._expr_4 = import7.UNINITIALIZED;
        this._expr_5 = import7.UNINITIALIZED;
        this._expr_6 = import7.UNINITIALIZED;
        this._expr_7 = import7.UNINITIALIZED;
        this._expr_8 = import7.UNINITIALIZED;
        this._expr_9 = import7.UNINITIALIZED;
        var subscription_0 = this._ColorPickerDirective_10_5.colorPickerChange.subscribe(this.eventHandler(this._handle_colorPickerChange_10_0.bind(this)));
        this._expr_13 = import7.UNINITIALIZED;
        var disposable_3 = this.renderer.listen(this._el_15, 'ngModelChange', this.eventHandler(this._handle_ngModelChange_15_0.bind(this)));
        var disposable_4 = this.renderer.listen(this._el_15, 'input', this.eventHandler(this._handle_input_15_1.bind(this)));
        var disposable_5 = this.renderer.listen(this._el_15, 'blur', this.eventHandler(this._handle_blur_15_2.bind(this)));
        this._expr_14 = import7.UNINITIALIZED;
        var subscription_1 = this._NgModel_15_5.update.subscribe(this.eventHandler(this._handle_ngModelChange_15_0.bind(this)));
        this._expr_15 = import7.UNINITIALIZED;
        this._expr_16 = import7.UNINITIALIZED;
        this._expr_17 = import7.UNINITIALIZED;
        this._expr_18 = import7.UNINITIALIZED;
        this._expr_19 = import7.UNINITIALIZED;
        this._expr_20 = import7.UNINITIALIZED;
        this._expr_24 = import7.UNINITIALIZED;
        var disposable_6 = this.renderer.listen(this._el_23, 'ngModelChange', this.eventHandler(this._handle_ngModelChange_23_0.bind(this)));
        var disposable_7 = this.renderer.listen(this._el_23, 'input', this.eventHandler(this._handle_input_23_1.bind(this)));
        var disposable_8 = this.renderer.listen(this._el_23, 'blur', this.eventHandler(this._handle_blur_23_2.bind(this)));
        this._expr_25 = import7.UNINITIALIZED;
        var subscription_2 = this._NgModel_23_5.update.subscribe(this.eventHandler(this._handle_ngModelChange_23_0.bind(this)));
        this._expr_26 = import7.UNINITIALIZED;
        this._expr_27 = import7.UNINITIALIZED;
        this._expr_28 = import7.UNINITIALIZED;
        this._expr_29 = import7.UNINITIALIZED;
        this._expr_30 = import7.UNINITIALIZED;
        this._expr_31 = import7.UNINITIALIZED;
        this.init([].concat([this._el_0]), [
            this._el_0,
            this._text_1,
            this._el_2,
            this._text_3,
            this._el_4,
            this._text_5,
            this._el_6,
            this._text_7,
            this._text_8,
            this._text_9,
            this._el_10,
            this._text_11,
            this._text_12,
            this._el_13,
            this._text_14,
            this._el_15,
            this._text_16,
            this._el_17,
            this._text_18,
            this._text_19,
            this._text_20,
            this._el_21,
            this._text_22,
            this._el_23,
            this._text_24,
            this._el_25,
            this._text_26,
            this._text_27,
            this._text_28
        ], [
            disposable_0,
            disposable_1,
            disposable_2,
            disposable_3,
            disposable_4,
            disposable_5,
            disposable_6,
            disposable_7,
            disposable_8
        ], [
            subscription_0,
            subscription_1,
            subscription_2
        ]);
        return null;
    };
    _View_HeaderStyleComponent1.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import18.ColorPickerDirective) && (10 === requestNodeIndex))) {
            return this._ColorPickerDirective_10_5;
        }
        if (((token === import19.DefaultValueAccessor) && (15 === requestNodeIndex))) {
            return this._DefaultValueAccessor_15_3;
        }
        if (((token === import16.NG_VALUE_ACCESSOR) && (15 === requestNodeIndex))) {
            return this._NG_VALUE_ACCESSOR_15_4;
        }
        if (((token === import11.NgModel) && (15 === requestNodeIndex))) {
            return this._NgModel_15_5;
        }
        if (((token === import17.NgControl) && (15 === requestNodeIndex))) {
            return this._NgControl_15_6;
        }
        if (((token === import12.NgControlStatus) && (15 === requestNodeIndex))) {
            return this._NgControlStatus_15_7;
        }
        if (((token === import19.DefaultValueAccessor) && (23 === requestNodeIndex))) {
            return this._DefaultValueAccessor_23_3;
        }
        if (((token === import16.NG_VALUE_ACCESSOR) && (23 === requestNodeIndex))) {
            return this._NG_VALUE_ACCESSOR_23_4;
        }
        if (((token === import11.NgModel) && (23 === requestNodeIndex))) {
            return this._NgModel_23_5;
        }
        if (((token === import17.NgControl) && (23 === requestNodeIndex))) {
            return this._NgControl_23_6;
        }
        if (((token === import12.NgControlStatus) && (23 === requestNodeIndex))) {
            return this._NgControlStatus_23_7;
        }
        return notFoundResult;
    };
    _View_HeaderStyleComponent1.prototype.detectChangesInternal = function (throwOnChange) {
        var changes = null;
        changes = null;
        var currVal_4 = this.parent.context.header.background;
        if (import4.checkBinding(throwOnChange, this._expr_4, currVal_4)) {
            this._ColorPickerDirective_10_5.colorPicker = currVal_4;
            if ((changes === null)) {
                (changes = {});
            }
            changes['colorPicker'] = new import7.SimpleChange(this._expr_4, currVal_4);
            this._expr_4 = currVal_4;
        }
        var currVal_5 = 'bottom';
        if (import4.checkBinding(throwOnChange, this._expr_5, currVal_5)) {
            this._ColorPickerDirective_10_5.cpPosition = currVal_5;
            if ((changes === null)) {
                (changes = {});
            }
            changes['cpPosition'] = new import7.SimpleChange(this._expr_5, currVal_5);
            this._expr_5 = currVal_5;
        }
        var currVal_6 = true;
        if (import4.checkBinding(throwOnChange, this._expr_6, currVal_6)) {
            this._ColorPickerDirective_10_5.cpCancelButton = currVal_6;
            if ((changes === null)) {
                (changes = {});
            }
            changes['cpCancelButton'] = new import7.SimpleChange(this._expr_6, currVal_6);
            this._expr_6 = currVal_6;
        }
        var currVal_7 = 'colorpicker-button button';
        if (import4.checkBinding(throwOnChange, this._expr_7, currVal_7)) {
            this._ColorPickerDirective_10_5.cpCancelButtonClass = currVal_7;
            if ((changes === null)) {
                (changes = {});
            }
            changes['cpCancelButtonClass'] = new import7.SimpleChange(this._expr_7, currVal_7);
            this._expr_7 = currVal_7;
        }
        var currVal_8 = true;
        if (import4.checkBinding(throwOnChange, this._expr_8, currVal_8)) {
            this._ColorPickerDirective_10_5.cpOKButton = currVal_8;
            if ((changes === null)) {
                (changes = {});
            }
            changes['cpOKButton'] = new import7.SimpleChange(this._expr_8, currVal_8);
            this._expr_8 = currVal_8;
        }
        var currVal_9 = 'colorpicker-button button right10';
        if (import4.checkBinding(throwOnChange, this._expr_9, currVal_9)) {
            this._ColorPickerDirective_10_5.cpOKButtonClass = currVal_9;
            if ((changes === null)) {
                (changes = {});
            }
            changes['cpOKButtonClass'] = new import7.SimpleChange(this._expr_9, currVal_9);
            this._expr_9 = currVal_9;
        }
        if ((changes !== null)) {
            this._ColorPickerDirective_10_5.ngOnChanges(changes);
        }
        if (((this.numberOfChecks === 0) && !throwOnChange)) {
            this._ColorPickerDirective_10_5.ngOnInit();
        }
        changes = null;
        var currVal_14 = this.parent.context.header.height;
        if (import4.checkBinding(throwOnChange, this._expr_14, currVal_14)) {
            this._NgModel_15_5.model = currVal_14;
            if ((changes === null)) {
                (changes = {});
            }
            changes['model'] = new import7.SimpleChange(this._expr_14, currVal_14);
            this._expr_14 = currVal_14;
        }
        if ((changes !== null)) {
            this._NgModel_15_5.ngOnChanges(changes);
        }
        changes = null;
        var currVal_25 = this.parent.context.header.padding_top;
        if (import4.checkBinding(throwOnChange, this._expr_25, currVal_25)) {
            this._NgModel_23_5.model = currVal_25;
            if ((changes === null)) {
                (changes = {});
            }
            changes['model'] = new import7.SimpleChange(this._expr_25, currVal_25);
            this._expr_25 = currVal_25;
        }
        if ((changes !== null)) {
            this._NgModel_23_5.ngOnChanges(changes);
        }
        this.detectContentChildrenChanges(throwOnChange);
        var currVal_3 = this.parent.context.header.background;
        if (import4.checkBinding(throwOnChange, this._expr_3, currVal_3)) {
            this.renderer.setElementStyle(this._el_10, 'background', ((this.viewUtils.sanitizer.sanitize(import22.SecurityContext.STYLE, currVal_3) == null) ? null : this.viewUtils.sanitizer.sanitize(import22.SecurityContext.STYLE, currVal_3).toString()));
            this._expr_3 = currVal_3;
        }
        var currVal_13 = this.parent.context.header.height;
        if (import4.checkBinding(throwOnChange, this._expr_13, currVal_13)) {
            this.renderer.setElementClass(this._el_15, 'active', currVal_13);
            this._expr_13 = currVal_13;
        }
        var currVal_15 = this._NgControlStatus_15_7.ngClassUntouched;
        if (import4.checkBinding(throwOnChange, this._expr_15, currVal_15)) {
            this.renderer.setElementClass(this._el_15, 'ng-untouched', currVal_15);
            this._expr_15 = currVal_15;
        }
        var currVal_16 = this._NgControlStatus_15_7.ngClassTouched;
        if (import4.checkBinding(throwOnChange, this._expr_16, currVal_16)) {
            this.renderer.setElementClass(this._el_15, 'ng-touched', currVal_16);
            this._expr_16 = currVal_16;
        }
        var currVal_17 = this._NgControlStatus_15_7.ngClassPristine;
        if (import4.checkBinding(throwOnChange, this._expr_17, currVal_17)) {
            this.renderer.setElementClass(this._el_15, 'ng-pristine', currVal_17);
            this._expr_17 = currVal_17;
        }
        var currVal_18 = this._NgControlStatus_15_7.ngClassDirty;
        if (import4.checkBinding(throwOnChange, this._expr_18, currVal_18)) {
            this.renderer.setElementClass(this._el_15, 'ng-dirty', currVal_18);
            this._expr_18 = currVal_18;
        }
        var currVal_19 = this._NgControlStatus_15_7.ngClassValid;
        if (import4.checkBinding(throwOnChange, this._expr_19, currVal_19)) {
            this.renderer.setElementClass(this._el_15, 'ng-valid', currVal_19);
            this._expr_19 = currVal_19;
        }
        var currVal_20 = this._NgControlStatus_15_7.ngClassInvalid;
        if (import4.checkBinding(throwOnChange, this._expr_20, currVal_20)) {
            this.renderer.setElementClass(this._el_15, 'ng-invalid', currVal_20);
            this._expr_20 = currVal_20;
        }
        var currVal_24 = this.parent.context.header.padding_top;
        if (import4.checkBinding(throwOnChange, this._expr_24, currVal_24)) {
            this.renderer.setElementClass(this._el_23, 'active', currVal_24);
            this._expr_24 = currVal_24;
        }
        var currVal_26 = this._NgControlStatus_23_7.ngClassUntouched;
        if (import4.checkBinding(throwOnChange, this._expr_26, currVal_26)) {
            this.renderer.setElementClass(this._el_23, 'ng-untouched', currVal_26);
            this._expr_26 = currVal_26;
        }
        var currVal_27 = this._NgControlStatus_23_7.ngClassTouched;
        if (import4.checkBinding(throwOnChange, this._expr_27, currVal_27)) {
            this.renderer.setElementClass(this._el_23, 'ng-touched', currVal_27);
            this._expr_27 = currVal_27;
        }
        var currVal_28 = this._NgControlStatus_23_7.ngClassPristine;
        if (import4.checkBinding(throwOnChange, this._expr_28, currVal_28)) {
            this.renderer.setElementClass(this._el_23, 'ng-pristine', currVal_28);
            this._expr_28 = currVal_28;
        }
        var currVal_29 = this._NgControlStatus_23_7.ngClassDirty;
        if (import4.checkBinding(throwOnChange, this._expr_29, currVal_29)) {
            this.renderer.setElementClass(this._el_23, 'ng-dirty', currVal_29);
            this._expr_29 = currVal_29;
        }
        var currVal_30 = this._NgControlStatus_23_7.ngClassValid;
        if (import4.checkBinding(throwOnChange, this._expr_30, currVal_30)) {
            this.renderer.setElementClass(this._el_23, 'ng-valid', currVal_30);
            this._expr_30 = currVal_30;
        }
        var currVal_31 = this._NgControlStatus_23_7.ngClassInvalid;
        if (import4.checkBinding(throwOnChange, this._expr_31, currVal_31)) {
            this.renderer.setElementClass(this._el_23, 'ng-invalid', currVal_31);
            this._expr_31 = currVal_31;
        }
        this.detectViewChildrenChanges(throwOnChange);
    };
    _View_HeaderStyleComponent1.prototype.destroyInternal = function () {
        this._NgModel_15_5.ngOnDestroy();
        this._NgModel_23_5.ngOnDestroy();
    };
    _View_HeaderStyleComponent1.prototype._handle_colorPickerChange_10_0 = function ($event) {
        this.markPathToRootAsCheckOnce();
        var pd_0 = ((this.parent.context.header.background = $event) !== false);
        return (true && pd_0);
    };
    _View_HeaderStyleComponent1.prototype._handle_input_10_1 = function ($event) {
        this.markPathToRootAsCheckOnce();
        var pd_0 = (this._ColorPickerDirective_10_5.changeInput($event.target.value) !== false);
        return (true && pd_0);
    };
    _View_HeaderStyleComponent1.prototype._handle_click_10_2 = function ($event) {
        this.markPathToRootAsCheckOnce();
        var pd_0 = (this._ColorPickerDirective_10_5.onClick() !== false);
        return (true && pd_0);
    };
    _View_HeaderStyleComponent1.prototype._handle_ngModelChange_15_0 = function ($event) {
        this.markPathToRootAsCheckOnce();
        var pd_0 = ((this.parent.context.header.height = $event) !== false);
        return (true && pd_0);
    };
    _View_HeaderStyleComponent1.prototype._handle_input_15_1 = function ($event) {
        this.markPathToRootAsCheckOnce();
        var pd_0 = (this._DefaultValueAccessor_15_3.onChange($event.target.value) !== false);
        return (true && pd_0);
    };
    _View_HeaderStyleComponent1.prototype._handle_blur_15_2 = function ($event) {
        this.markPathToRootAsCheckOnce();
        var pd_0 = (this._DefaultValueAccessor_15_3.onTouched() !== false);
        return (true && pd_0);
    };
    _View_HeaderStyleComponent1.prototype._handle_ngModelChange_23_0 = function ($event) {
        this.markPathToRootAsCheckOnce();
        var pd_0 = ((this.parent.context.header.padding_top = $event) !== false);
        return (true && pd_0);
    };
    _View_HeaderStyleComponent1.prototype._handle_input_23_1 = function ($event) {
        this.markPathToRootAsCheckOnce();
        var pd_0 = (this._DefaultValueAccessor_23_3.onChange($event.target.value) !== false);
        return (true && pd_0);
    };
    _View_HeaderStyleComponent1.prototype._handle_blur_23_2 = function ($event) {
        this.markPathToRootAsCheckOnce();
        var pd_0 = (this._DefaultValueAccessor_23_3.onTouched() !== false);
        return (true && pd_0);
    };
    return _View_HeaderStyleComponent1;
}(import1.AppView));
function viewFactory_HeaderStyleComponent1(viewUtils, parentInjector, declarationEl) {
    return new _View_HeaderStyleComponent1(viewUtils, parentInjector, declarationEl);
}
