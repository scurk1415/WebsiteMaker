/**
 * This file is generated by the Angular 2 template compiler.
 * Do not edit.
 */
/* tslint:disable */
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
import * as import1 from '@angular/core/src/linker/view';
import * as import2 from '@angular/core/src/linker/element';
import * as import3 from './overlay.component';
import * as import4 from '@angular/core/src/linker/view_utils';
import * as import6 from '@angular/core/src/linker/view_type';
import * as import7 from '@angular/core/src/change_detection/change_detection';
import * as import8 from '@angular/core/src/metadata/view';
import * as import9 from '@angular/core/src/linker/component_factory';
import * as import10 from './overlay.component.css.shim';
import * as import11 from '@angular/common/src/directives/ng_if';
import * as import12 from '@angular/core/src/linker/template_ref';
var renderType_OverlayComponent_Host = null;
var _View_OverlayComponent_Host0 = (function (_super) {
    __extends(_View_OverlayComponent_Host0, _super);
    function _View_OverlayComponent_Host0(viewUtils, parentInjector, declarationEl) {
        _super.call(this, _View_OverlayComponent_Host0, renderType_OverlayComponent_Host, import6.ViewType.HOST, viewUtils, parentInjector, declarationEl, import7.ChangeDetectorStatus.CheckAlways);
    }
    _View_OverlayComponent_Host0.prototype.createInternal = function (rootSelector) {
        this._el_0 = this.selectOrCreateHostElement('dip-editor-overlay', rootSelector, null);
        this._appEl_0 = new import2.AppElement(0, null, this, this._el_0);
        var compView_0 = viewFactory_OverlayComponent0(this.viewUtils, this.injector(0), this._appEl_0);
        this._OverlayComponent_0_4 = new import3.OverlayComponent();
        this._appEl_0.initComponent(this._OverlayComponent_0_4, [], compView_0);
        compView_0.create(this._OverlayComponent_0_4, this.projectableNodes, null);
        this.init([].concat([this._el_0]), [this._el_0], [], []);
        return this._appEl_0;
    };
    _View_OverlayComponent_Host0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import3.OverlayComponent) && (0 === requestNodeIndex))) {
            return this._OverlayComponent_0_4;
        }
        return notFoundResult;
    };
    return _View_OverlayComponent_Host0;
}(import1.AppView));
function viewFactory_OverlayComponent_Host0(viewUtils, parentInjector, declarationEl) {
    if ((renderType_OverlayComponent_Host === null)) {
        (renderType_OverlayComponent_Host = viewUtils.createRenderComponentType('', 0, import8.ViewEncapsulation.None, [], {}));
    }
    return new _View_OverlayComponent_Host0(viewUtils, parentInjector, declarationEl);
}
export var OverlayComponentNgFactory = new import9.ComponentFactory('dip-editor-overlay', viewFactory_OverlayComponent_Host0, import3.OverlayComponent);
var styles_OverlayComponent = [import10.styles];
var renderType_OverlayComponent = null;
var _View_OverlayComponent0 = (function (_super) {
    __extends(_View_OverlayComponent0, _super);
    function _View_OverlayComponent0(viewUtils, parentInjector, declarationEl) {
        _super.call(this, _View_OverlayComponent0, renderType_OverlayComponent, import6.ViewType.COMPONENT, viewUtils, parentInjector, declarationEl, import7.ChangeDetectorStatus.CheckAlways);
    }
    _View_OverlayComponent0.prototype.createInternal = function (rootSelector) {
        var parentRenderNode = this.renderer.createViewRoot(this.declarationAppElement.nativeElement);
        this._anchor_0 = this.renderer.createTemplateAnchor(parentRenderNode, null);
        this._appEl_0 = new import2.AppElement(0, null, this, this._anchor_0);
        this._TemplateRef_0_5 = new import12.TemplateRef_(this._appEl_0, viewFactory_OverlayComponent1);
        this._NgIf_0_6 = new import11.NgIf(this._appEl_0.vcRef, this._TemplateRef_0_5);
        this._expr_0 = import7.UNINITIALIZED;
        this.init([], [this._anchor_0], [], []);
        return null;
    };
    _View_OverlayComponent0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import12.TemplateRef) && (0 === requestNodeIndex))) {
            return this._TemplateRef_0_5;
        }
        if (((token === import11.NgIf) && (0 === requestNodeIndex))) {
            return this._NgIf_0_6;
        }
        return notFoundResult;
    };
    _View_OverlayComponent0.prototype.detectChangesInternal = function (throwOnChange) {
        var currVal_0 = this.context.element.showOverlay;
        if (import4.checkBinding(throwOnChange, this._expr_0, currVal_0)) {
            this._NgIf_0_6.ngIf = currVal_0;
            this._expr_0 = currVal_0;
        }
        this.detectContentChildrenChanges(throwOnChange);
        this.detectViewChildrenChanges(throwOnChange);
    };
    return _View_OverlayComponent0;
}(import1.AppView));
export function viewFactory_OverlayComponent0(viewUtils, parentInjector, declarationEl) {
    if ((renderType_OverlayComponent === null)) {
        (renderType_OverlayComponent = viewUtils.createRenderComponentType('', 0, import8.ViewEncapsulation.Emulated, styles_OverlayComponent, {}));
    }
    return new _View_OverlayComponent0(viewUtils, parentInjector, declarationEl);
}
var _View_OverlayComponent1 = (function (_super) {
    __extends(_View_OverlayComponent1, _super);
    function _View_OverlayComponent1(viewUtils, parentInjector, declarationEl) {
        _super.call(this, _View_OverlayComponent1, renderType_OverlayComponent, import6.ViewType.EMBEDDED, viewUtils, parentInjector, declarationEl, import7.ChangeDetectorStatus.CheckAlways);
    }
    _View_OverlayComponent1.prototype.createInternal = function (rootSelector) {
        this._el_0 = this.renderer.createElement(null, 'div', null);
        this.renderer.setElementAttribute(this._el_0, 'class', 'editor_overlay');
        this._text_1 = this.renderer.createText(this._el_0, '\n    ', null);
        this._el_2 = this.renderer.createElement(this._el_0, 'button', null);
        this.renderer.setElementAttribute(this._el_2, 'class', 'button');
        this._text_3 = this.renderer.createText(this._el_2, 'Edit', null);
        this._text_4 = this.renderer.createText(this._el_0, '\n    ', null);
        this._text_5 = this.renderer.createText(this._el_0, '\n', null);
        var disposable_0 = this.renderer.listen(this._el_2, 'click', this.eventHandler(this._handle_click_2_0.bind(this)));
        this.init([].concat([this._el_0]), [
            this._el_0,
            this._text_1,
            this._el_2,
            this._text_3,
            this._text_4,
            this._text_5
        ], [disposable_0], []);
        return null;
    };
    _View_OverlayComponent1.prototype._handle_click_2_0 = function ($event) {
        this.markPathToRootAsCheckOnce();
        var pd_0 = ((this.parent.context.element.showControl = true) !== false);
        return (true && pd_0);
    };
    return _View_OverlayComponent1;
}(import1.AppView));
function viewFactory_OverlayComponent1(viewUtils, parentInjector, declarationEl) {
    return new _View_OverlayComponent1(viewUtils, parentInjector, declarationEl);
}
