/**
 * This file is generated by the Angular 2 template compiler.
 * Do not edit.
 */
/* tslint:disable */
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
import * as import1 from '@angular/core/src/linker/view';
import * as import2 from '@angular/core/src/linker/element';
import * as import3 from './combobox.component';
import * as import4 from '@angular/core/src/linker/view_utils';
import * as import6 from '@angular/core/src/linker/view_type';
import * as import7 from '@angular/core/src/change_detection/change_detection';
import * as import8 from '@angular/core/src/metadata/view';
import * as import9 from '@angular/core/src/linker/component_factory';
import * as import10 from './combobox.component.css.shim';
import * as import11 from '@angular/common/src/directives/ng_if';
import * as import12 from '@angular/common/src/directives/ng_style';
import * as import13 from '@angular/core/src/linker/template_ref';
import * as import14 from '@angular/core/src/change_detection/differs/keyvalue_differs';
import * as import15 from '@angular/core/src/linker/element_ref';
import * as import16 from '@angular/common/src/directives/ng_for';
import * as import17 from '@angular/core/src/change_detection/differs/iterable_differs';
var renderType_ComboboxComponent_Host = null;
var _View_ComboboxComponent_Host0 = (function (_super) {
    __extends(_View_ComboboxComponent_Host0, _super);
    function _View_ComboboxComponent_Host0(viewUtils, parentInjector, declarationEl) {
        _super.call(this, _View_ComboboxComponent_Host0, renderType_ComboboxComponent_Host, import6.ViewType.HOST, viewUtils, parentInjector, declarationEl, import7.ChangeDetectorStatus.CheckAlways);
    }
    _View_ComboboxComponent_Host0.prototype.createInternal = function (rootSelector) {
        this._el_0 = this.selectOrCreateHostElement('dip-combobox', rootSelector, null);
        this._appEl_0 = new import2.AppElement(0, null, this, this._el_0);
        var compView_0 = viewFactory_ComboboxComponent0(this.viewUtils, this.injector(0), this._appEl_0);
        this._ComboboxComponent_0_4 = new import3.ComboboxComponent();
        this._appEl_0.initComponent(this._ComboboxComponent_0_4, [], compView_0);
        compView_0.create(this._ComboboxComponent_0_4, this.projectableNodes, null);
        this.init([].concat([this._el_0]), [this._el_0], [], []);
        return this._appEl_0;
    };
    _View_ComboboxComponent_Host0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import3.ComboboxComponent) && (0 === requestNodeIndex))) {
            return this._ComboboxComponent_0_4;
        }
        return notFoundResult;
    };
    _View_ComboboxComponent_Host0.prototype.detectChangesInternal = function (throwOnChange) {
        if (((this.numberOfChecks === 0) && !throwOnChange)) {
            this._ComboboxComponent_0_4.ngOnInit();
        }
        this.detectContentChildrenChanges(throwOnChange);
        this.detectViewChildrenChanges(throwOnChange);
    };
    return _View_ComboboxComponent_Host0;
}(import1.AppView));
function viewFactory_ComboboxComponent_Host0(viewUtils, parentInjector, declarationEl) {
    if ((renderType_ComboboxComponent_Host === null)) {
        (renderType_ComboboxComponent_Host = viewUtils.createRenderComponentType('', 0, import8.ViewEncapsulation.None, [], {}));
    }
    return new _View_ComboboxComponent_Host0(viewUtils, parentInjector, declarationEl);
}
export var ComboboxComponentNgFactory = new import9.ComponentFactory('dip-combobox', viewFactory_ComboboxComponent_Host0, import3.ComboboxComponent);
var styles_ComboboxComponent = [import10.styles];
var renderType_ComboboxComponent = null;
var _View_ComboboxComponent0 = (function (_super) {
    __extends(_View_ComboboxComponent0, _super);
    function _View_ComboboxComponent0(viewUtils, parentInjector, declarationEl) {
        _super.call(this, _View_ComboboxComponent0, renderType_ComboboxComponent, import6.ViewType.COMPONENT, viewUtils, parentInjector, declarationEl, import7.ChangeDetectorStatus.CheckAlways);
    }
    _View_ComboboxComponent0.prototype.createInternal = function (rootSelector) {
        var parentRenderNode = this.renderer.createViewRoot(this.declarationAppElement.nativeElement);
        this._el_0 = this.renderer.createElement(parentRenderNode, 'div', null);
        this.renderer.setElementAttribute(this._el_0, 'class', 'form-field');
        this._text_1 = this.renderer.createText(this._el_0, '\n    ', null);
        this._anchor_2 = this.renderer.createTemplateAnchor(this._el_0, null);
        this._appEl_2 = new import2.AppElement(2, 0, this, this._anchor_2);
        this._TemplateRef_2_5 = new import13.TemplateRef_(this._appEl_2, viewFactory_ComboboxComponent1);
        this._NgIf_2_6 = new import11.NgIf(this._appEl_2.vcRef, this._TemplateRef_2_5);
        this._text_3 = this.renderer.createText(this._el_0, '\n    ', null);
        this._el_4 = this.renderer.createElement(this._el_0, 'div', null);
        this.renderer.setElementAttribute(this._el_4, 'class', 'combobox');
        this._text_5 = this.renderer.createText(this._el_4, '\n        ', null);
        this._el_6 = this.renderer.createElement(this._el_4, 'div', null);
        this.renderer.setElementAttribute(this._el_6, 'class', 'cb-trigger');
        this._NgStyle_6_3 = new import12.NgStyle(this.parentInjector.get(import14.KeyValueDiffers), new import15.ElementRef(this._el_6), this.renderer);
        this._text_7 = this.renderer.createText(this._el_6, '', null);
        this._el_8 = this.renderer.createElement(this._el_6, 'span', null);
        this.renderer.setElementAttribute(this._el_8, 'class', 'down-arrow');
        this._text_9 = this.renderer.createText(this._el_6, '\n        ', null);
        this._text_10 = this.renderer.createText(this._el_4, '\n        ', null);
        this._anchor_11 = this.renderer.createTemplateAnchor(this._el_4, null);
        this._appEl_11 = new import2.AppElement(11, 4, this, this._anchor_11);
        this._TemplateRef_11_5 = new import13.TemplateRef_(this._appEl_11, viewFactory_ComboboxComponent2);
        this._NgIf_11_6 = new import11.NgIf(this._appEl_11.vcRef, this._TemplateRef_11_5);
        this._text_12 = this.renderer.createText(this._el_4, '\n    ', null);
        this._text_13 = this.renderer.createText(this._el_0, '\n', null);
        this._text_14 = this.renderer.createText(parentRenderNode, '\n', null);
        this._expr_0 = import7.UNINITIALIZED;
        this._expr_2 = import7.UNINITIALIZED;
        var disposable_0 = this.renderer.listen(this._el_6, 'click', this.eventHandler(this._handle_click_6_0.bind(this)));
        this._expr_3 = import7.UNINITIALIZED;
        this._expr_4 = import7.UNINITIALIZED;
        this._expr_5 = import7.UNINITIALIZED;
        this.init([], [
            this._el_0,
            this._text_1,
            this._anchor_2,
            this._text_3,
            this._el_4,
            this._text_5,
            this._el_6,
            this._text_7,
            this._el_8,
            this._text_9,
            this._text_10,
            this._anchor_11,
            this._text_12,
            this._text_13,
            this._text_14
        ], [disposable_0], []);
        return null;
    };
    _View_ComboboxComponent0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import13.TemplateRef) && (2 === requestNodeIndex))) {
            return this._TemplateRef_2_5;
        }
        if (((token === import11.NgIf) && (2 === requestNodeIndex))) {
            return this._NgIf_2_6;
        }
        if (((token === import12.NgStyle) && ((6 <= requestNodeIndex) && (requestNodeIndex <= 9)))) {
            return this._NgStyle_6_3;
        }
        if (((token === import13.TemplateRef) && (11 === requestNodeIndex))) {
            return this._TemplateRef_11_5;
        }
        if (((token === import11.NgIf) && (11 === requestNodeIndex))) {
            return this._NgIf_11_6;
        }
        return notFoundResult;
    };
    _View_ComboboxComponent0.prototype.detectChangesInternal = function (throwOnChange) {
        var currVal_0 = this.context.label;
        if (import4.checkBinding(throwOnChange, this._expr_0, currVal_0)) {
            this._NgIf_2_6.ngIf = currVal_0;
            this._expr_0 = currVal_0;
        }
        var currVal_3 = this.context.cbStyle;
        if (import4.checkBinding(throwOnChange, this._expr_3, currVal_3)) {
            this._NgStyle_6_3.ngStyle = currVal_3;
            this._expr_3 = currVal_3;
        }
        if (!throwOnChange) {
            this._NgStyle_6_3.ngDoCheck();
        }
        var currVal_5 = this.context.open;
        if (import4.checkBinding(throwOnChange, this._expr_5, currVal_5)) {
            this._NgIf_11_6.ngIf = currVal_5;
            this._expr_5 = currVal_5;
        }
        this.detectContentChildrenChanges(throwOnChange);
        var currVal_2 = (this.context.displayed_item.value === '');
        if (import4.checkBinding(throwOnChange, this._expr_2, currVal_2)) {
            this.renderer.setElementClass(this._el_6, 'empty', currVal_2);
            this._expr_2 = currVal_2;
        }
        var currVal_4 = import4.interpolate(1, '\n            ', this.context.displayed_item.text, '\n            ');
        if (import4.checkBinding(throwOnChange, this._expr_4, currVal_4)) {
            this.renderer.setText(this._text_7, currVal_4);
            this._expr_4 = currVal_4;
        }
        this.detectViewChildrenChanges(throwOnChange);
    };
    _View_ComboboxComponent0.prototype._handle_click_6_0 = function ($event) {
        this.markPathToRootAsCheckOnce();
        var pd_0 = (this.context.onOpen() !== false);
        return (true && pd_0);
    };
    return _View_ComboboxComponent0;
}(import1.AppView));
export function viewFactory_ComboboxComponent0(viewUtils, parentInjector, declarationEl) {
    if ((renderType_ComboboxComponent === null)) {
        (renderType_ComboboxComponent = viewUtils.createRenderComponentType('', 0, import8.ViewEncapsulation.Emulated, styles_ComboboxComponent, {}));
    }
    return new _View_ComboboxComponent0(viewUtils, parentInjector, declarationEl);
}
var _View_ComboboxComponent1 = (function (_super) {
    __extends(_View_ComboboxComponent1, _super);
    function _View_ComboboxComponent1(viewUtils, parentInjector, declarationEl) {
        _super.call(this, _View_ComboboxComponent1, renderType_ComboboxComponent, import6.ViewType.EMBEDDED, viewUtils, parentInjector, declarationEl, import7.ChangeDetectorStatus.CheckAlways);
    }
    _View_ComboboxComponent1.prototype.createInternal = function (rootSelector) {
        this._el_0 = this.renderer.createElement(null, 'div', null);
        this.renderer.setElementAttribute(this._el_0, 'class', 'form-label');
        this._text_1 = this.renderer.createText(this._el_0, '\n        ', null);
        this._el_2 = this.renderer.createElement(this._el_0, 'label', null);
        this._text_3 = this.renderer.createText(this._el_2, '', null);
        this._text_4 = this.renderer.createText(this._el_0, '\n    ', null);
        this._expr_0 = import7.UNINITIALIZED;
        this.init([].concat([this._el_0]), [
            this._el_0,
            this._text_1,
            this._el_2,
            this._text_3,
            this._text_4
        ], [], []);
        return null;
    };
    _View_ComboboxComponent1.prototype.detectChangesInternal = function (throwOnChange) {
        this.detectContentChildrenChanges(throwOnChange);
        var currVal_0 = import4.interpolate(1, '', this.parent.context.label, '');
        if (import4.checkBinding(throwOnChange, this._expr_0, currVal_0)) {
            this.renderer.setText(this._text_3, currVal_0);
            this._expr_0 = currVal_0;
        }
        this.detectViewChildrenChanges(throwOnChange);
    };
    return _View_ComboboxComponent1;
}(import1.AppView));
function viewFactory_ComboboxComponent1(viewUtils, parentInjector, declarationEl) {
    return new _View_ComboboxComponent1(viewUtils, parentInjector, declarationEl);
}
var _View_ComboboxComponent2 = (function (_super) {
    __extends(_View_ComboboxComponent2, _super);
    function _View_ComboboxComponent2(viewUtils, parentInjector, declarationEl) {
        _super.call(this, _View_ComboboxComponent2, renderType_ComboboxComponent, import6.ViewType.EMBEDDED, viewUtils, parentInjector, declarationEl, import7.ChangeDetectorStatus.CheckAlways);
    }
    _View_ComboboxComponent2.prototype.createInternal = function (rootSelector) {
        this._el_0 = this.renderer.createElement(null, 'ul', null);
        this.renderer.setElementAttribute(this._el_0, 'class', 'cb-items');
        this._text_1 = this.renderer.createText(this._el_0, '\n            ', null);
        this._anchor_2 = this.renderer.createTemplateAnchor(this._el_0, null);
        this._appEl_2 = new import2.AppElement(2, 0, this, this._anchor_2);
        this._TemplateRef_2_5 = new import13.TemplateRef_(this._appEl_2, viewFactory_ComboboxComponent3);
        this._NgFor_2_6 = new import16.NgFor(this._appEl_2.vcRef, this._TemplateRef_2_5, this.parent.parentInjector.get(import17.IterableDiffers), this.parent.ref);
        this._text_3 = this.renderer.createText(this._el_0, '\n        ', null);
        this._expr_0 = import7.UNINITIALIZED;
        this.init([].concat([this._el_0]), [
            this._el_0,
            this._text_1,
            this._anchor_2,
            this._text_3
        ], [], []);
        return null;
    };
    _View_ComboboxComponent2.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import13.TemplateRef) && (2 === requestNodeIndex))) {
            return this._TemplateRef_2_5;
        }
        if (((token === import16.NgFor) && (2 === requestNodeIndex))) {
            return this._NgFor_2_6;
        }
        return notFoundResult;
    };
    _View_ComboboxComponent2.prototype.detectChangesInternal = function (throwOnChange) {
        var changes = null;
        changes = null;
        var currVal_0 = this.parent.context.items;
        if (import4.checkBinding(throwOnChange, this._expr_0, currVal_0)) {
            this._NgFor_2_6.ngForOf = currVal_0;
            if ((changes === null)) {
                (changes = {});
            }
            changes['ngForOf'] = new import7.SimpleChange(this._expr_0, currVal_0);
            this._expr_0 = currVal_0;
        }
        if ((changes !== null)) {
            this._NgFor_2_6.ngOnChanges(changes);
        }
        if (!throwOnChange) {
            this._NgFor_2_6.ngDoCheck();
        }
        this.detectContentChildrenChanges(throwOnChange);
        this.detectViewChildrenChanges(throwOnChange);
    };
    return _View_ComboboxComponent2;
}(import1.AppView));
function viewFactory_ComboboxComponent2(viewUtils, parentInjector, declarationEl) {
    return new _View_ComboboxComponent2(viewUtils, parentInjector, declarationEl);
}
var _View_ComboboxComponent3 = (function (_super) {
    __extends(_View_ComboboxComponent3, _super);
    function _View_ComboboxComponent3(viewUtils, parentInjector, declarationEl) {
        _super.call(this, _View_ComboboxComponent3, renderType_ComboboxComponent, import6.ViewType.EMBEDDED, viewUtils, parentInjector, declarationEl, import7.ChangeDetectorStatus.CheckAlways);
    }
    _View_ComboboxComponent3.prototype.createInternal = function (rootSelector) {
        this._el_0 = this.renderer.createElement(null, 'li', null);
        this.renderer.setElementAttribute(this._el_0, 'class', 'cb-item');
        this._text_1 = this.renderer.createText(this._el_0, '', null);
        this._expr_1 = import7.UNINITIALIZED;
        var disposable_0 = this.renderer.listen(this._el_0, 'click', this.eventHandler(this._handle_click_0_0.bind(this)));
        this._expr_2 = import7.UNINITIALIZED;
        this.init([].concat([this._el_0]), [
            this._el_0,
            this._text_1
        ], [disposable_0], []);
        return null;
    };
    _View_ComboboxComponent3.prototype.detectChangesInternal = function (throwOnChange) {
        this.detectContentChildrenChanges(throwOnChange);
        var currVal_1 = (this.parent.parent.context.displayed_item.value == this.context.$implicit.value);
        if (import4.checkBinding(throwOnChange, this._expr_1, currVal_1)) {
            this.renderer.setElementClass(this._el_0, 'selected', currVal_1);
            this._expr_1 = currVal_1;
        }
        var currVal_2 = import4.interpolate(1, '\n\n                ', this.context.$implicit.text, '\n            ');
        if (import4.checkBinding(throwOnChange, this._expr_2, currVal_2)) {
            this.renderer.setText(this._text_1, currVal_2);
            this._expr_2 = currVal_2;
        }
        this.detectViewChildrenChanges(throwOnChange);
    };
    _View_ComboboxComponent3.prototype._handle_click_0_0 = function ($event) {
        this.markPathToRootAsCheckOnce();
        var pd_0 = (this.parent.parent.context.selectItem(this.context.$implicit.value) !== false);
        return (true && pd_0);
    };
    return _View_ComboboxComponent3;
}(import1.AppView));
function viewFactory_ComboboxComponent3(viewUtils, parentInjector, declarationEl) {
    return new _View_ComboboxComponent3(viewUtils, parentInjector, declarationEl);
}
