/**
 * This file is generated by the Angular 2 template compiler.
 * Do not edit.
 */
 /* tslint:disable */

import * as import0 from '@angular/core/src/render/api';
import * as import1 from '@angular/core/src/linker/view';
import * as import2 from '@angular/core/src/linker/element';
import * as import3 from './header-style.component';
import * as import4 from '@angular/core/src/linker/view_utils';
import * as import5 from '@angular/core/src/di/injector';
import * as import6 from '@angular/core/src/linker/view_type';
import * as import7 from '@angular/core/src/change_detection/change_detection';
import * as import8 from '@angular/core/src/metadata/view';
import * as import9 from '@angular/core/src/linker/component_factory';
import * as import10 from '@angular/forms/src/directives/checkbox_value_accessor';
import * as import11 from '@angular/forms/src/directives/ng_model';
import * as import12 from '@angular/forms/src/directives/ng_control_status';
import * as import13 from '@angular/common/src/directives/ng_if';
import * as import14 from '@angular/core/src/linker/element_ref';
import * as import15 from '@angular/core/src/linker/template_ref';
import * as import16 from '@angular/forms/src/directives/control_value_accessor';
import * as import17 from '@angular/forms/src/directives/ng_control';
import * as import18 from 'angular2-color-picker/lib/color-picker.directive';
import * as import19 from '@angular/forms/src/directives/default_value_accessor';
import * as import20 from '@angular/core/src/linker/compiler';
import * as import21 from 'angular2-color-picker/lib/color-picker.service';
import * as import22 from '@angular/core/src/security';
var renderType_HeaderStyleComponent_Host:import0.RenderComponentType = (null as any);
class _View_HeaderStyleComponent_Host0 extends import1.AppView<any> {
  _el_0:any;
  /*private*/ _appEl_0:import2.AppElement;
  _HeaderStyleComponent_0_4:import3.HeaderStyleComponent;
  constructor(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import2.AppElement) {
    super(_View_HeaderStyleComponent_Host0,renderType_HeaderStyleComponent_Host,import6.ViewType.HOST,viewUtils,parentInjector,declarationEl,import7.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import2.AppElement {
    this._el_0 = this.selectOrCreateHostElement('dip-header-style',rootSelector,(null as any));
    this._appEl_0 = new import2.AppElement(0,(null as any),this,this._el_0);
    var compView_0:any = viewFactory_HeaderStyleComponent0(this.viewUtils,this.injector(0),this._appEl_0);
    this._HeaderStyleComponent_0_4 = new import3.HeaderStyleComponent();
    this._appEl_0.initComponent(this._HeaderStyleComponent_0_4,([] as any[]),compView_0);
    compView_0.create(this._HeaderStyleComponent_0_4,this.projectableNodes,(null as any));
    this.init(([] as any[]).concat([this._el_0]),[this._el_0],([] as any[]),([] as any[]));
    return this._appEl_0;
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import3.HeaderStyleComponent) && (0 === requestNodeIndex))) { return this._HeaderStyleComponent_0_4; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    if (((this.numberOfChecks === 0) && !throwOnChange)) { this._HeaderStyleComponent_0_4.ngOnInit(); }
    this.detectContentChildrenChanges(throwOnChange);
    this.detectViewChildrenChanges(throwOnChange);
  }
}
function viewFactory_HeaderStyleComponent_Host0(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import2.AppElement):import1.AppView<any> {
  if ((renderType_HeaderStyleComponent_Host === (null as any))) { (renderType_HeaderStyleComponent_Host = viewUtils.createRenderComponentType('',0,import8.ViewEncapsulation.None,([] as any[]),{})); }
  return new _View_HeaderStyleComponent_Host0(viewUtils,parentInjector,declarationEl);
}
export const HeaderStyleComponentNgFactory:import9.ComponentFactory<import3.HeaderStyleComponent> = new import9.ComponentFactory<import3.HeaderStyleComponent>('dip-header-style',viewFactory_HeaderStyleComponent_Host0,import3.HeaderStyleComponent);
const styles_HeaderStyleComponent:any[] = ([] as any[]);
var renderType_HeaderStyleComponent:import0.RenderComponentType = (null as any);
class _View_HeaderStyleComponent0 extends import1.AppView<import3.HeaderStyleComponent> {
  _el_0:any;
  _text_1:any;
  _el_2:any;
  _text_3:any;
  _el_4:any;
  _text_5:any;
  _text_6:any;
  _text_7:any;
  _el_8:any;
  _text_9:any;
  _el_10:any;
  _CheckboxControlValueAccessor_10_3:import10.CheckboxControlValueAccessor;
  _NG_VALUE_ACCESSOR_10_4:any[];
  _NgModel_10_5:import11.NgModel;
  _NgControl_10_6:any;
  _NgControlStatus_10_7:import12.NgControlStatus;
  _text_11:any;
  _el_12:any;
  _text_13:any;
  _text_14:any;
  _text_15:any;
  _anchor_16:any;
  /*private*/ _appEl_16:import2.AppElement;
  _TemplateRef_16_5:any;
  _NgIf_16_6:import13.NgIf;
  /*private*/ _expr_3:any;
  /*private*/ _expr_4:any;
  /*private*/ _expr_5:any;
  /*private*/ _expr_6:any;
  /*private*/ _expr_7:any;
  /*private*/ _expr_8:any;
  /*private*/ _expr_9:any;
  /*private*/ _expr_10:any;
  /*private*/ _expr_11:any;
  constructor(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import2.AppElement) {
    super(_View_HeaderStyleComponent0,renderType_HeaderStyleComponent,import6.ViewType.COMPONENT,viewUtils,parentInjector,declarationEl,import7.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import2.AppElement {
    const parentRenderNode:any = this.renderer.createViewRoot(this.declarationAppElement.nativeElement);
    this._el_0 = this.renderer.createElement(parentRenderNode,'div',(null as any));
    this.renderer.setElementAttribute(this._el_0,'class','form-field');
    this._text_1 = this.renderer.createText(this._el_0,'\n    ',(null as any));
    this._el_2 = this.renderer.createElement(this._el_0,'div',(null as any));
    this.renderer.setElementAttribute(this._el_2,'class','form-label');
    this._text_3 = this.renderer.createText(this._el_2,'\n        ',(null as any));
    this._el_4 = this.renderer.createElement(this._el_2,'label',(null as any));
    this.renderer.setElementAttribute(this._el_4,'for','display');
    this._text_5 = this.renderer.createText(this._el_4,'Display',(null as any));
    this._text_6 = this.renderer.createText(this._el_2,'\n    ',(null as any));
    this._text_7 = this.renderer.createText(this._el_0,'\n    ',(null as any));
    this._el_8 = this.renderer.createElement(this._el_0,'div',(null as any));
    this.renderer.setElementAttribute(this._el_8,'class','checkbox-wrapper');
    this._text_9 = this.renderer.createText(this._el_8,'\n        ',(null as any));
    this._el_10 = this.renderer.createElement(this._el_8,'input',(null as any));
    this.renderer.setElementAttribute(this._el_10,'id','display');
    this.renderer.setElementAttribute(this._el_10,'type','checkbox');
    this._CheckboxControlValueAccessor_10_3 = new import10.CheckboxControlValueAccessor(this.renderer,new import14.ElementRef(this._el_10));
    this._NG_VALUE_ACCESSOR_10_4 = [this._CheckboxControlValueAccessor_10_3];
    this._NgModel_10_5 = new import11.NgModel((null as any),(null as any),(null as any),this._NG_VALUE_ACCESSOR_10_4);
    this._NgControl_10_6 = this._NgModel_10_5;
    this._NgControlStatus_10_7 = new import12.NgControlStatus(this._NgControl_10_6);
    this._text_11 = this.renderer.createText(this._el_8,'\n\n        ',(null as any));
    this._el_12 = this.renderer.createElement(this._el_8,'label',(null as any));
    this.renderer.setElementAttribute(this._el_12,'for','display');
    this._text_13 = this.renderer.createText(this._el_8,'\n    ',(null as any));
    this._text_14 = this.renderer.createText(this._el_0,'\n',(null as any));
    this._text_15 = this.renderer.createText(parentRenderNode,'\n\n',(null as any));
    this._anchor_16 = this.renderer.createTemplateAnchor(parentRenderNode,(null as any));
    this._appEl_16 = new import2.AppElement(16,(null as any),this,this._anchor_16);
    this._TemplateRef_16_5 = new import15.TemplateRef_(this._appEl_16,viewFactory_HeaderStyleComponent1);
    this._NgIf_16_6 = new import13.NgIf(this._appEl_16.vcRef,this._TemplateRef_16_5);
    this._expr_3 = import7.UNINITIALIZED;
    var disposable_0:Function = this.renderer.listen(this._el_10,'ngModelChange',this.eventHandler(this._handle_ngModelChange_10_0.bind(this)));
    var disposable_1:Function = this.renderer.listen(this._el_10,'change',this.eventHandler(this._handle_change_10_1.bind(this)));
    var disposable_2:Function = this.renderer.listen(this._el_10,'blur',this.eventHandler(this._handle_blur_10_2.bind(this)));
    this._expr_4 = import7.UNINITIALIZED;
    const subscription_0:any = this._NgModel_10_5.update.subscribe(this.eventHandler(this._handle_ngModelChange_10_0.bind(this)));
    this._expr_5 = import7.UNINITIALIZED;
    this._expr_6 = import7.UNINITIALIZED;
    this._expr_7 = import7.UNINITIALIZED;
    this._expr_8 = import7.UNINITIALIZED;
    this._expr_9 = import7.UNINITIALIZED;
    this._expr_10 = import7.UNINITIALIZED;
    this._expr_11 = import7.UNINITIALIZED;
    this.init(([] as any[]),[
      this._el_0,
      this._text_1,
      this._el_2,
      this._text_3,
      this._el_4,
      this._text_5,
      this._text_6,
      this._text_7,
      this._el_8,
      this._text_9,
      this._el_10,
      this._text_11,
      this._el_12,
      this._text_13,
      this._text_14,
      this._text_15,
      this._anchor_16
    ]
    ,[
      disposable_0,
      disposable_1,
      disposable_2
    ]
    ,[subscription_0]);
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import10.CheckboxControlValueAccessor) && (10 === requestNodeIndex))) { return this._CheckboxControlValueAccessor_10_3; }
    if (((token === import16.NG_VALUE_ACCESSOR) && (10 === requestNodeIndex))) { return this._NG_VALUE_ACCESSOR_10_4; }
    if (((token === import11.NgModel) && (10 === requestNodeIndex))) { return this._NgModel_10_5; }
    if (((token === import17.NgControl) && (10 === requestNodeIndex))) { return this._NgControl_10_6; }
    if (((token === import12.NgControlStatus) && (10 === requestNodeIndex))) { return this._NgControlStatus_10_7; }
    if (((token === import15.TemplateRef) && (16 === requestNodeIndex))) { return this._TemplateRef_16_5; }
    if (((token === import13.NgIf) && (16 === requestNodeIndex))) { return this._NgIf_16_6; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    var changes:{[key: string]:import7.SimpleChange} = (null as any);
    changes = (null as any);
    const currVal_4:any = this.context.header.display;
    if (import4.checkBinding(throwOnChange,this._expr_4,currVal_4)) {
      this._NgModel_10_5.model = currVal_4;
      if ((changes === (null as any))) { (changes = {}); }
      changes['model'] = new import7.SimpleChange(this._expr_4,currVal_4);
      this._expr_4 = currVal_4;
    }
    if ((changes !== (null as any))) { this._NgModel_10_5.ngOnChanges(changes); }
    const currVal_11:any = this.context.header.display;
    if (import4.checkBinding(throwOnChange,this._expr_11,currVal_11)) {
      this._NgIf_16_6.ngIf = currVal_11;
      this._expr_11 = currVal_11;
    }
    this.detectContentChildrenChanges(throwOnChange);
    const currVal_3:any = this.context.header.display;
    if (import4.checkBinding(throwOnChange,this._expr_3,currVal_3)) {
      this.renderer.setElementProperty(this._el_10,'checked',currVal_3);
      this._expr_3 = currVal_3;
    }
    const currVal_5:any = this._NgControlStatus_10_7.ngClassUntouched;
    if (import4.checkBinding(throwOnChange,this._expr_5,currVal_5)) {
      this.renderer.setElementClass(this._el_10,'ng-untouched',currVal_5);
      this._expr_5 = currVal_5;
    }
    const currVal_6:any = this._NgControlStatus_10_7.ngClassTouched;
    if (import4.checkBinding(throwOnChange,this._expr_6,currVal_6)) {
      this.renderer.setElementClass(this._el_10,'ng-touched',currVal_6);
      this._expr_6 = currVal_6;
    }
    const currVal_7:any = this._NgControlStatus_10_7.ngClassPristine;
    if (import4.checkBinding(throwOnChange,this._expr_7,currVal_7)) {
      this.renderer.setElementClass(this._el_10,'ng-pristine',currVal_7);
      this._expr_7 = currVal_7;
    }
    const currVal_8:any = this._NgControlStatus_10_7.ngClassDirty;
    if (import4.checkBinding(throwOnChange,this._expr_8,currVal_8)) {
      this.renderer.setElementClass(this._el_10,'ng-dirty',currVal_8);
      this._expr_8 = currVal_8;
    }
    const currVal_9:any = this._NgControlStatus_10_7.ngClassValid;
    if (import4.checkBinding(throwOnChange,this._expr_9,currVal_9)) {
      this.renderer.setElementClass(this._el_10,'ng-valid',currVal_9);
      this._expr_9 = currVal_9;
    }
    const currVal_10:any = this._NgControlStatus_10_7.ngClassInvalid;
    if (import4.checkBinding(throwOnChange,this._expr_10,currVal_10)) {
      this.renderer.setElementClass(this._el_10,'ng-invalid',currVal_10);
      this._expr_10 = currVal_10;
    }
    this.detectViewChildrenChanges(throwOnChange);
  }
  destroyInternal():void {
    this._NgModel_10_5.ngOnDestroy();
  }
  private _handle_ngModelChange_10_0($event:any):boolean {
    this.markPathToRootAsCheckOnce();
    const pd_0:any = ((<any>(this.context.header.display = $event)) !== false);
    return (true && pd_0);
  }
  private _handle_change_10_1($event:any):boolean {
    this.markPathToRootAsCheckOnce();
    const pd_0:any = ((<any>this._CheckboxControlValueAccessor_10_3.onChange($event.target.checked)) !== false);
    return (true && pd_0);
  }
  private _handle_blur_10_2($event:any):boolean {
    this.markPathToRootAsCheckOnce();
    const pd_0:any = ((<any>this._CheckboxControlValueAccessor_10_3.onTouched()) !== false);
    return (true && pd_0);
  }
}
export function viewFactory_HeaderStyleComponent0(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import2.AppElement):import1.AppView<import3.HeaderStyleComponent> {
  if ((renderType_HeaderStyleComponent === (null as any))) { (renderType_HeaderStyleComponent = viewUtils.createRenderComponentType('',0,import8.ViewEncapsulation.None,styles_HeaderStyleComponent,{})); }
  return new _View_HeaderStyleComponent0(viewUtils,parentInjector,declarationEl);
}
class _View_HeaderStyleComponent1 extends import1.AppView<any> {
  _el_0:any;
  _text_1:any;
  _el_2:any;
  _text_3:any;
  _el_4:any;
  _text_5:any;
  _el_6:any;
  _text_7:any;
  _text_8:any;
  _text_9:any;
  _el_10:any;
  /*private*/ _appEl_10:import2.AppElement;
  _ColorPickerDirective_10_5:import18.ColorPickerDirective;
  _text_11:any;
  _text_12:any;
  _el_13:any;
  _text_14:any;
  _el_15:any;
  _DefaultValueAccessor_15_3:import19.DefaultValueAccessor;
  _NG_VALUE_ACCESSOR_15_4:any[];
  _NgModel_15_5:import11.NgModel;
  _NgControl_15_6:any;
  _NgControlStatus_15_7:import12.NgControlStatus;
  _text_16:any;
  _el_17:any;
  _text_18:any;
  _text_19:any;
  _text_20:any;
  _el_21:any;
  _text_22:any;
  _el_23:any;
  _DefaultValueAccessor_23_3:import19.DefaultValueAccessor;
  _NG_VALUE_ACCESSOR_23_4:any[];
  _NgModel_23_5:import11.NgModel;
  _NgControl_23_6:any;
  _NgControlStatus_23_7:import12.NgControlStatus;
  _text_24:any;
  _el_25:any;
  _text_26:any;
  _text_27:any;
  _text_28:any;
  /*private*/ _expr_3:any;
  /*private*/ _expr_4:any;
  /*private*/ _expr_5:any;
  /*private*/ _expr_6:any;
  /*private*/ _expr_7:any;
  /*private*/ _expr_8:any;
  /*private*/ _expr_9:any;
  /*private*/ _expr_13:any;
  /*private*/ _expr_14:any;
  /*private*/ _expr_15:any;
  /*private*/ _expr_16:any;
  /*private*/ _expr_17:any;
  /*private*/ _expr_18:any;
  /*private*/ _expr_19:any;
  /*private*/ _expr_20:any;
  /*private*/ _expr_24:any;
  /*private*/ _expr_25:any;
  /*private*/ _expr_26:any;
  /*private*/ _expr_27:any;
  /*private*/ _expr_28:any;
  /*private*/ _expr_29:any;
  /*private*/ _expr_30:any;
  /*private*/ _expr_31:any;
  constructor(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import2.AppElement) {
    super(_View_HeaderStyleComponent1,renderType_HeaderStyleComponent,import6.ViewType.EMBEDDED,viewUtils,parentInjector,declarationEl,import7.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import2.AppElement {
    this._el_0 = this.renderer.createElement((null as any),'div',(null as any));
    this.renderer.setElementAttribute(this._el_0,'class','form-field clearfix');
    this._text_1 = this.renderer.createText(this._el_0,'\n    ',(null as any));
    this._el_2 = this.renderer.createElement(this._el_0,'div',(null as any));
    this.renderer.setElementAttribute(this._el_2,'class','left');
    this._text_3 = this.renderer.createText(this._el_2,'\n        ',(null as any));
    this._el_4 = this.renderer.createElement(this._el_2,'div',(null as any));
    this.renderer.setElementAttribute(this._el_4,'class','form-label');
    this._text_5 = this.renderer.createText(this._el_4,'\n            ',(null as any));
    this._el_6 = this.renderer.createElement(this._el_4,'label',(null as any));
    this.renderer.setElementAttribute(this._el_6,'for','Background');
    this._text_7 = this.renderer.createText(this._el_6,'Background',(null as any));
    this._text_8 = this.renderer.createText(this._el_4,'\n        ',(null as any));
    this._text_9 = this.renderer.createText(this._el_2,'\n        ',(null as any));
    this._el_10 = this.renderer.createElement(this._el_2,'input',(null as any));
    this.renderer.setElementAttribute(this._el_10,'class','colorpicker');
    this.renderer.setElementAttribute(this._el_10,'id','Background');
    this._appEl_10 = new import2.AppElement(10,2,this,this._el_10);
    this._ColorPickerDirective_10_5 = new import18.ColorPickerDirective(this.parentInjector.get(import20.Compiler),this._appEl_10.vcRef,new import14.ElementRef(this._el_10),this.parentInjector.get(import21.ColorPickerService));
    this._text_11 = this.renderer.createText(this._el_2,'\n    ',(null as any));
    this._text_12 = this.renderer.createText(this._el_0,'\n    ',(null as any));
    this._el_13 = this.renderer.createElement(this._el_0,'div',(null as any));
    this.renderer.setElementAttribute(this._el_13,'class','input-field left left20');
    this._text_14 = this.renderer.createText(this._el_13,'\n        ',(null as any));
    this._el_15 = this.renderer.createElement(this._el_13,'input',(null as any));
    this.renderer.setElementAttribute(this._el_15,'style','width: 100px;');
    this._DefaultValueAccessor_15_3 = new import19.DefaultValueAccessor(this.renderer,new import14.ElementRef(this._el_15));
    this._NG_VALUE_ACCESSOR_15_4 = [this._DefaultValueAccessor_15_3];
    this._NgModel_15_5 = new import11.NgModel((null as any),(null as any),(null as any),this._NG_VALUE_ACCESSOR_15_4);
    this._NgControl_15_6 = this._NgModel_15_5;
    this._NgControlStatus_15_7 = new import12.NgControlStatus(this._NgControl_15_6);
    this._text_16 = this.renderer.createText(this._el_13,'\n        ',(null as any));
    this._el_17 = this.renderer.createElement(this._el_13,'label',(null as any));
    this._text_18 = this.renderer.createText(this._el_17,'Height',(null as any));
    this._text_19 = this.renderer.createText(this._el_13,'\n    ',(null as any));
    this._text_20 = this.renderer.createText(this._el_0,'\n    ',(null as any));
    this._el_21 = this.renderer.createElement(this._el_0,'div',(null as any));
    this.renderer.setElementAttribute(this._el_21,'class','input-field left left20');
    this._text_22 = this.renderer.createText(this._el_21,'\n        ',(null as any));
    this._el_23 = this.renderer.createElement(this._el_21,'input',(null as any));
    this.renderer.setElementAttribute(this._el_23,'style','width: 100px;');
    this._DefaultValueAccessor_23_3 = new import19.DefaultValueAccessor(this.renderer,new import14.ElementRef(this._el_23));
    this._NG_VALUE_ACCESSOR_23_4 = [this._DefaultValueAccessor_23_3];
    this._NgModel_23_5 = new import11.NgModel((null as any),(null as any),(null as any),this._NG_VALUE_ACCESSOR_23_4);
    this._NgControl_23_6 = this._NgModel_23_5;
    this._NgControlStatus_23_7 = new import12.NgControlStatus(this._NgControl_23_6);
    this._text_24 = this.renderer.createText(this._el_21,'\n        ',(null as any));
    this._el_25 = this.renderer.createElement(this._el_21,'label',(null as any));
    this._text_26 = this.renderer.createText(this._el_25,'Padding top',(null as any));
    this._text_27 = this.renderer.createText(this._el_21,'\n    ',(null as any));
    this._text_28 = this.renderer.createText(this._el_0,'\n',(null as any));
    this._expr_3 = import7.UNINITIALIZED;
    var disposable_0:Function = this.renderer.listen(this._el_10,'colorPickerChange',this.eventHandler(this._handle_colorPickerChange_10_0.bind(this)));
    var disposable_1:Function = this.renderer.listen(this._el_10,'input',this.eventHandler(this._handle_input_10_1.bind(this)));
    var disposable_2:Function = this.renderer.listen(this._el_10,'click',this.eventHandler(this._handle_click_10_2.bind(this)));
    this._expr_4 = import7.UNINITIALIZED;
    this._expr_5 = import7.UNINITIALIZED;
    this._expr_6 = import7.UNINITIALIZED;
    this._expr_7 = import7.UNINITIALIZED;
    this._expr_8 = import7.UNINITIALIZED;
    this._expr_9 = import7.UNINITIALIZED;
    const subscription_0:any = this._ColorPickerDirective_10_5.colorPickerChange.subscribe(this.eventHandler(this._handle_colorPickerChange_10_0.bind(this)));
    this._expr_13 = import7.UNINITIALIZED;
    var disposable_3:Function = this.renderer.listen(this._el_15,'ngModelChange',this.eventHandler(this._handle_ngModelChange_15_0.bind(this)));
    var disposable_4:Function = this.renderer.listen(this._el_15,'input',this.eventHandler(this._handle_input_15_1.bind(this)));
    var disposable_5:Function = this.renderer.listen(this._el_15,'blur',this.eventHandler(this._handle_blur_15_2.bind(this)));
    this._expr_14 = import7.UNINITIALIZED;
    const subscription_1:any = this._NgModel_15_5.update.subscribe(this.eventHandler(this._handle_ngModelChange_15_0.bind(this)));
    this._expr_15 = import7.UNINITIALIZED;
    this._expr_16 = import7.UNINITIALIZED;
    this._expr_17 = import7.UNINITIALIZED;
    this._expr_18 = import7.UNINITIALIZED;
    this._expr_19 = import7.UNINITIALIZED;
    this._expr_20 = import7.UNINITIALIZED;
    this._expr_24 = import7.UNINITIALIZED;
    var disposable_6:Function = this.renderer.listen(this._el_23,'ngModelChange',this.eventHandler(this._handle_ngModelChange_23_0.bind(this)));
    var disposable_7:Function = this.renderer.listen(this._el_23,'input',this.eventHandler(this._handle_input_23_1.bind(this)));
    var disposable_8:Function = this.renderer.listen(this._el_23,'blur',this.eventHandler(this._handle_blur_23_2.bind(this)));
    this._expr_25 = import7.UNINITIALIZED;
    const subscription_2:any = this._NgModel_23_5.update.subscribe(this.eventHandler(this._handle_ngModelChange_23_0.bind(this)));
    this._expr_26 = import7.UNINITIALIZED;
    this._expr_27 = import7.UNINITIALIZED;
    this._expr_28 = import7.UNINITIALIZED;
    this._expr_29 = import7.UNINITIALIZED;
    this._expr_30 = import7.UNINITIALIZED;
    this._expr_31 = import7.UNINITIALIZED;
    this.init(([] as any[]).concat([this._el_0]),[
      this._el_0,
      this._text_1,
      this._el_2,
      this._text_3,
      this._el_4,
      this._text_5,
      this._el_6,
      this._text_7,
      this._text_8,
      this._text_9,
      this._el_10,
      this._text_11,
      this._text_12,
      this._el_13,
      this._text_14,
      this._el_15,
      this._text_16,
      this._el_17,
      this._text_18,
      this._text_19,
      this._text_20,
      this._el_21,
      this._text_22,
      this._el_23,
      this._text_24,
      this._el_25,
      this._text_26,
      this._text_27,
      this._text_28
    ]
    ,[
      disposable_0,
      disposable_1,
      disposable_2,
      disposable_3,
      disposable_4,
      disposable_5,
      disposable_6,
      disposable_7,
      disposable_8
    ]
    ,[
      subscription_0,
      subscription_1,
      subscription_2
    ]
    );
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import18.ColorPickerDirective) && (10 === requestNodeIndex))) { return this._ColorPickerDirective_10_5; }
    if (((token === import19.DefaultValueAccessor) && (15 === requestNodeIndex))) { return this._DefaultValueAccessor_15_3; }
    if (((token === import16.NG_VALUE_ACCESSOR) && (15 === requestNodeIndex))) { return this._NG_VALUE_ACCESSOR_15_4; }
    if (((token === import11.NgModel) && (15 === requestNodeIndex))) { return this._NgModel_15_5; }
    if (((token === import17.NgControl) && (15 === requestNodeIndex))) { return this._NgControl_15_6; }
    if (((token === import12.NgControlStatus) && (15 === requestNodeIndex))) { return this._NgControlStatus_15_7; }
    if (((token === import19.DefaultValueAccessor) && (23 === requestNodeIndex))) { return this._DefaultValueAccessor_23_3; }
    if (((token === import16.NG_VALUE_ACCESSOR) && (23 === requestNodeIndex))) { return this._NG_VALUE_ACCESSOR_23_4; }
    if (((token === import11.NgModel) && (23 === requestNodeIndex))) { return this._NgModel_23_5; }
    if (((token === import17.NgControl) && (23 === requestNodeIndex))) { return this._NgControl_23_6; }
    if (((token === import12.NgControlStatus) && (23 === requestNodeIndex))) { return this._NgControlStatus_23_7; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    var changes:{[key: string]:import7.SimpleChange} = (null as any);
    changes = (null as any);
    const currVal_4:any = this.parent.context.header.background;
    if (import4.checkBinding(throwOnChange,this._expr_4,currVal_4)) {
      this._ColorPickerDirective_10_5.colorPicker = currVal_4;
      if ((changes === (null as any))) { (changes = {}); }
      changes['colorPicker'] = new import7.SimpleChange(this._expr_4,currVal_4);
      this._expr_4 = currVal_4;
    }
    const currVal_5:any = 'bottom';
    if (import4.checkBinding(throwOnChange,this._expr_5,currVal_5)) {
      this._ColorPickerDirective_10_5.cpPosition = currVal_5;
      if ((changes === (null as any))) { (changes = {}); }
      changes['cpPosition'] = new import7.SimpleChange(this._expr_5,currVal_5);
      this._expr_5 = currVal_5;
    }
    const currVal_6:any = true;
    if (import4.checkBinding(throwOnChange,this._expr_6,currVal_6)) {
      this._ColorPickerDirective_10_5.cpCancelButton = currVal_6;
      if ((changes === (null as any))) { (changes = {}); }
      changes['cpCancelButton'] = new import7.SimpleChange(this._expr_6,currVal_6);
      this._expr_6 = currVal_6;
    }
    const currVal_7:any = 'colorpicker-button button';
    if (import4.checkBinding(throwOnChange,this._expr_7,currVal_7)) {
      this._ColorPickerDirective_10_5.cpCancelButtonClass = currVal_7;
      if ((changes === (null as any))) { (changes = {}); }
      changes['cpCancelButtonClass'] = new import7.SimpleChange(this._expr_7,currVal_7);
      this._expr_7 = currVal_7;
    }
    const currVal_8:any = true;
    if (import4.checkBinding(throwOnChange,this._expr_8,currVal_8)) {
      this._ColorPickerDirective_10_5.cpOKButton = currVal_8;
      if ((changes === (null as any))) { (changes = {}); }
      changes['cpOKButton'] = new import7.SimpleChange(this._expr_8,currVal_8);
      this._expr_8 = currVal_8;
    }
    const currVal_9:any = 'colorpicker-button button right10';
    if (import4.checkBinding(throwOnChange,this._expr_9,currVal_9)) {
      this._ColorPickerDirective_10_5.cpOKButtonClass = currVal_9;
      if ((changes === (null as any))) { (changes = {}); }
      changes['cpOKButtonClass'] = new import7.SimpleChange(this._expr_9,currVal_9);
      this._expr_9 = currVal_9;
    }
    if ((changes !== (null as any))) { this._ColorPickerDirective_10_5.ngOnChanges(changes); }
    if (((this.numberOfChecks === 0) && !throwOnChange)) { this._ColorPickerDirective_10_5.ngOnInit(); }
    changes = (null as any);
    const currVal_14:any = this.parent.context.header.height;
    if (import4.checkBinding(throwOnChange,this._expr_14,currVal_14)) {
      this._NgModel_15_5.model = currVal_14;
      if ((changes === (null as any))) { (changes = {}); }
      changes['model'] = new import7.SimpleChange(this._expr_14,currVal_14);
      this._expr_14 = currVal_14;
    }
    if ((changes !== (null as any))) { this._NgModel_15_5.ngOnChanges(changes); }
    changes = (null as any);
    const currVal_25:any = this.parent.context.header.padding_top;
    if (import4.checkBinding(throwOnChange,this._expr_25,currVal_25)) {
      this._NgModel_23_5.model = currVal_25;
      if ((changes === (null as any))) { (changes = {}); }
      changes['model'] = new import7.SimpleChange(this._expr_25,currVal_25);
      this._expr_25 = currVal_25;
    }
    if ((changes !== (null as any))) { this._NgModel_23_5.ngOnChanges(changes); }
    this.detectContentChildrenChanges(throwOnChange);
    const currVal_3:any = this.parent.context.header.background;
    if (import4.checkBinding(throwOnChange,this._expr_3,currVal_3)) {
      this.renderer.setElementStyle(this._el_10,'background',((this.viewUtils.sanitizer.sanitize(import22.SecurityContext.STYLE,currVal_3) == (null as any))? (null as any): this.viewUtils.sanitizer.sanitize(import22.SecurityContext.STYLE,currVal_3).toString()));
      this._expr_3 = currVal_3;
    }
    const currVal_13:any = this.parent.context.header.height;
    if (import4.checkBinding(throwOnChange,this._expr_13,currVal_13)) {
      this.renderer.setElementClass(this._el_15,'active',currVal_13);
      this._expr_13 = currVal_13;
    }
    const currVal_15:any = this._NgControlStatus_15_7.ngClassUntouched;
    if (import4.checkBinding(throwOnChange,this._expr_15,currVal_15)) {
      this.renderer.setElementClass(this._el_15,'ng-untouched',currVal_15);
      this._expr_15 = currVal_15;
    }
    const currVal_16:any = this._NgControlStatus_15_7.ngClassTouched;
    if (import4.checkBinding(throwOnChange,this._expr_16,currVal_16)) {
      this.renderer.setElementClass(this._el_15,'ng-touched',currVal_16);
      this._expr_16 = currVal_16;
    }
    const currVal_17:any = this._NgControlStatus_15_7.ngClassPristine;
    if (import4.checkBinding(throwOnChange,this._expr_17,currVal_17)) {
      this.renderer.setElementClass(this._el_15,'ng-pristine',currVal_17);
      this._expr_17 = currVal_17;
    }
    const currVal_18:any = this._NgControlStatus_15_7.ngClassDirty;
    if (import4.checkBinding(throwOnChange,this._expr_18,currVal_18)) {
      this.renderer.setElementClass(this._el_15,'ng-dirty',currVal_18);
      this._expr_18 = currVal_18;
    }
    const currVal_19:any = this._NgControlStatus_15_7.ngClassValid;
    if (import4.checkBinding(throwOnChange,this._expr_19,currVal_19)) {
      this.renderer.setElementClass(this._el_15,'ng-valid',currVal_19);
      this._expr_19 = currVal_19;
    }
    const currVal_20:any = this._NgControlStatus_15_7.ngClassInvalid;
    if (import4.checkBinding(throwOnChange,this._expr_20,currVal_20)) {
      this.renderer.setElementClass(this._el_15,'ng-invalid',currVal_20);
      this._expr_20 = currVal_20;
    }
    const currVal_24:any = this.parent.context.header.padding_top;
    if (import4.checkBinding(throwOnChange,this._expr_24,currVal_24)) {
      this.renderer.setElementClass(this._el_23,'active',currVal_24);
      this._expr_24 = currVal_24;
    }
    const currVal_26:any = this._NgControlStatus_23_7.ngClassUntouched;
    if (import4.checkBinding(throwOnChange,this._expr_26,currVal_26)) {
      this.renderer.setElementClass(this._el_23,'ng-untouched',currVal_26);
      this._expr_26 = currVal_26;
    }
    const currVal_27:any = this._NgControlStatus_23_7.ngClassTouched;
    if (import4.checkBinding(throwOnChange,this._expr_27,currVal_27)) {
      this.renderer.setElementClass(this._el_23,'ng-touched',currVal_27);
      this._expr_27 = currVal_27;
    }
    const currVal_28:any = this._NgControlStatus_23_7.ngClassPristine;
    if (import4.checkBinding(throwOnChange,this._expr_28,currVal_28)) {
      this.renderer.setElementClass(this._el_23,'ng-pristine',currVal_28);
      this._expr_28 = currVal_28;
    }
    const currVal_29:any = this._NgControlStatus_23_7.ngClassDirty;
    if (import4.checkBinding(throwOnChange,this._expr_29,currVal_29)) {
      this.renderer.setElementClass(this._el_23,'ng-dirty',currVal_29);
      this._expr_29 = currVal_29;
    }
    const currVal_30:any = this._NgControlStatus_23_7.ngClassValid;
    if (import4.checkBinding(throwOnChange,this._expr_30,currVal_30)) {
      this.renderer.setElementClass(this._el_23,'ng-valid',currVal_30);
      this._expr_30 = currVal_30;
    }
    const currVal_31:any = this._NgControlStatus_23_7.ngClassInvalid;
    if (import4.checkBinding(throwOnChange,this._expr_31,currVal_31)) {
      this.renderer.setElementClass(this._el_23,'ng-invalid',currVal_31);
      this._expr_31 = currVal_31;
    }
    this.detectViewChildrenChanges(throwOnChange);
  }
  destroyInternal():void {
    this._NgModel_15_5.ngOnDestroy();
    this._NgModel_23_5.ngOnDestroy();
  }
  private _handle_colorPickerChange_10_0($event:any):boolean {
    this.markPathToRootAsCheckOnce();
    const pd_0:any = ((<any>(this.parent.context.header.background = $event)) !== false);
    return (true && pd_0);
  }
  private _handle_input_10_1($event:any):boolean {
    this.markPathToRootAsCheckOnce();
    const pd_0:any = ((<any>this._ColorPickerDirective_10_5.changeInput($event.target.value)) !== false);
    return (true && pd_0);
  }
  private _handle_click_10_2($event:any):boolean {
    this.markPathToRootAsCheckOnce();
    const pd_0:any = ((<any>this._ColorPickerDirective_10_5.onClick()) !== false);
    return (true && pd_0);
  }
  private _handle_ngModelChange_15_0($event:any):boolean {
    this.markPathToRootAsCheckOnce();
    const pd_0:any = ((<any>(this.parent.context.header.height = $event)) !== false);
    return (true && pd_0);
  }
  private _handle_input_15_1($event:any):boolean {
    this.markPathToRootAsCheckOnce();
    const pd_0:any = ((<any>this._DefaultValueAccessor_15_3.onChange($event.target.value)) !== false);
    return (true && pd_0);
  }
  private _handle_blur_15_2($event:any):boolean {
    this.markPathToRootAsCheckOnce();
    const pd_0:any = ((<any>this._DefaultValueAccessor_15_3.onTouched()) !== false);
    return (true && pd_0);
  }
  private _handle_ngModelChange_23_0($event:any):boolean {
    this.markPathToRootAsCheckOnce();
    const pd_0:any = ((<any>(this.parent.context.header.padding_top = $event)) !== false);
    return (true && pd_0);
  }
  private _handle_input_23_1($event:any):boolean {
    this.markPathToRootAsCheckOnce();
    const pd_0:any = ((<any>this._DefaultValueAccessor_23_3.onChange($event.target.value)) !== false);
    return (true && pd_0);
  }
  private _handle_blur_23_2($event:any):boolean {
    this.markPathToRootAsCheckOnce();
    const pd_0:any = ((<any>this._DefaultValueAccessor_23_3.onTouched()) !== false);
    return (true && pd_0);
  }
}
function viewFactory_HeaderStyleComponent1(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import2.AppElement):import1.AppView<any> {
  return new _View_HeaderStyleComponent1(viewUtils,parentInjector,declarationEl);
}